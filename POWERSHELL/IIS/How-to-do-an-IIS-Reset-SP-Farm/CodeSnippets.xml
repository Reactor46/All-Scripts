<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="############################################################################################################################################&#xD;&#xA;# This Scrip allows todo an IIS RESET to all the servers in a SharePoint Farm&#xD;&#xA;# Requited parameters: N/A&#xD;&#xA;############################################################################################################################################&#xD;&#xA;If ((Get-PSSnapIn -Name Microsoft.SharePoint.PowerShell -ErrorAction SilentlyContinue) -eq $null ) &#xD;&#xA;{ Add-PSSnapIn -Name Microsoft.SharePoint.PowerShell }&#xD;&#xA;&#xD;&#xA;$host.Runspace.ThreadOptions = &quot;ReuseThread&quot;&#xD;&#xA;&#xD;&#xA;#Definition of the funcion that performs the IIS RESET in all the servers&#xD;&#xA;function Do-IISReset&#xD;&#xA;{    &#xD;&#xA;    try&#xD;&#xA;    {        &#xD;&#xA;        #Getting the servers where the IISReset is going to be done&#xD;&#xA;        $spServers= Get-SPServer | ? {$_.Role -eq &quot;Application&quot;}&#xD;&#xA;        foreach ($spServer in $spServers)&#xD;&#xA;        {            &#xD;&#xA;            Write-Host &quot;Doing IIS Reset in server $spServer&quot; -f blue&#xD;&#xA;            iisreset $spServer /noforce &quot;\\&quot;$_.Address&#xD;&#xA;            iisreset $spServer /status &quot;\\&quot;$_.Address&#xD;&#xA;        }        &#xD;&#xA;        Write-Host &quot;IIS Reset completed successfully!!&quot; -f blue  &#xD;&#xA;    }&#xD;&#xA;    catch [System.Exception]&#xD;&#xA;    {&#xD;&#xA;        write-host -f red $_.Exception.ToString()&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Start-SPAssignment –Global&#xD;&#xA;#Calling the function&#xD;&#xA;Do-IISReset&#xD;&#xA;Stop-SPAssignment –Global&#xD;&#xA;&#xD;&#xA;Remove-PSSnapin Microsoft.SharePoint.PowerShell" />
  <Code Content="############################################################################################################################################&#xD;&#xA;# This Scrip allows todo an IIS RESET to all the servers in a SharePoint Farm&#xD;&#xA;# Requited parameters: N/A&#xD;&#xA;############################################################################################################################################&#xD;&#xA;If ((Get-PSSnapIn -Name Microsoft.SharePoint.PowerShell -ErrorAction SilentlyContinue) -eq $null ) &#xD;&#xA;{ Add-PSSnapIn -Name Microsoft.SharePoint.PowerShell }&#xD;&#xA;&#xD;&#xA;$host.Runspace.ThreadOptions = &quot;ReuseThread&quot;&#xD;&#xA;&#xD;&#xA;#Definition of the funcion that performs the IIS RESET in all the servers&#xD;&#xA;function Do-IISReset&#xD;&#xA;{    &#xD;&#xA;    try&#xD;&#xA;    {        &#xD;&#xA;        #Getting the servers where the IISReset is going to be done&#xD;&#xA;        $spServers= Get-SPServer | ? {$_.Role -eq &quot;Application&quot;}&#xD;&#xA;        foreach ($spServer in $spServers)&#xD;&#xA;        {            &#xD;&#xA;            Write-Host &quot;Doing IIS Reset in server $spServer&quot; -f blue&#xD;&#xA;            iisreset $spServer /noforce &quot;\\&quot;$_.Address&#xD;&#xA;            iisreset $spServer /status &quot;\\&quot;$_.Address&#xD;&#xA;        }        &#xD;&#xA;        Write-Host &quot;IIS Reset completed successfully!!&quot; -f blue  &#xD;&#xA;    }&#xD;&#xA;    catch [System.Exception]&#xD;&#xA;    {&#xD;&#xA;        write-host -f red $_.Exception.ToString()&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Start-SPAssignment –Global&#xD;&#xA;#Calling the function&#xD;&#xA;Do-IISReset&#xD;&#xA;Stop-SPAssignment –Global&#xD;&#xA;&#xD;&#xA;Remove-PSSnapin Microsoft.SharePoint.PowerShell" />
</CodeSnippets>