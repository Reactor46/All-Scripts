<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="###############################################################################&#xD;&#xA;#             Authors: Vikas Sukhija&#xD;&#xA;#             Date: 08/12/2013&#xD;&#xA;#             Description: Script to update sharepoint lists on SIP site&#xD;&#xA;#                          This will enable updating of DashBoard &#xD;&#xA;###############################################################################&#xD;&#xA;&#xD;&#xA;If ((Get-PSSnapin | where {$_.Name -match &quot;SharePoint.Powershell&quot;}) -eq $null)&#xD;&#xA;{&#xD;&#xA;&#x9;Add-PSSnapin Microsoft.SharePoint.Powershell&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;$date = get-date -format d&#xD;&#xA;$date = $date.ToString().Replace(“/”, “-”)&#xD;&#xA;&#xD;&#xA;$siteurl = &quot;http://sharepointlab/sites/SIP&quot;&#xD;&#xA;$ListName = &quot;SIPs&quot; &#xD;&#xA;&#xD;&#xA;##################################Get List##########################&#xD;&#xA;&#xD;&#xA;$spWeb = Get-SPWeb $siteurl                                                  &#xD;&#xA;$list = $spWeb.Lists[$ListName]&#xD;&#xA;$items = $list.getitems()&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;####################################Create Count variables############&#xD;&#xA;$Collection=@()&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;#####################Total SIPs######################################&#xD;&#xA;function TotalSips ($IsTower) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;if($item[&quot;IS Tower&quot;] -eq $IsTower)&#xD;&#xA;{&#xD;&#xA;$Collection += $item.Name&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;Write-host $Collection.count&#xD;&#xA;$output = &quot;.\Dashboard\&quot; + $IsTower + &quot;-&quot; + &quot;Totsip&quot; + &quot;_.txt&quot;&#xD;&#xA;$Collection.count | out-file $output&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;###########################Sips Closed by Tower##########################&#xD;&#xA;&#xD;&#xA;function sipsclosedbytower ($IsTower) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;if(($item[&quot;IS Tower&quot;] -eq $IsTower) -and ($item[&quot;SIP Status&quot;] -eq &quot;Closed&quot;))&#xD;&#xA;{&#xD;&#xA;$Collection += $item.Name&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;Write-host $Collection.count&#xD;&#xA;$output = &quot;.\Dashboard\&quot; + $IsTower + &quot;-&quot; + &quot;sipclbt&quot; + &quot;_.txt&quot;&#xD;&#xA;$Collection.count | out-file $output&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;###########################Sips in-progress by Tower##########################&#xD;&#xA;&#xD;&#xA;function sipsinprogressbytower ($IsTower) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;if(($item[&quot;IS Tower&quot;] -eq $IsTower) -and ($item[&quot;SIP Status&quot;] -eq &quot;In Progress&quot;))&#xD;&#xA;{&#xD;&#xA;$Collection += $item.Name&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;Write-host $Collection.count&#xD;&#xA;$output = &quot;.\Dashboard\&quot; + $IsTower + &quot;-&quot; + &quot;sipinprgt&quot; + &quot;_.txt&quot;&#xD;&#xA;$Collection.count | out-file $output&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;################################Total Active,Closed,progress,Proposed,Rejected######&#xD;&#xA;&#xD;&#xA;function sipstatus ($SIPSTATUS) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;if($item[&quot;SIP Status&quot;] -eq $SIPSTATUS)&#xD;&#xA;{&#xD;&#xA;$Collection += $item.Name&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;Write-host $Collection.count&#xD;&#xA;$output = &quot;.\Dashboard\&quot; + $SIPSTATUS + &quot;-&quot; + &quot;sipst&quot; + &quot;_.txt&quot;&#xD;&#xA;$Collection.count | out-file $output&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;####################################################################################&#xD;&#xA;&#xD;&#xA;TotalSips Messaging&#xD;&#xA;TotalSips Windows&#xD;&#xA;TotalSips Unix&#xD;&#xA;TotalSips DBA&#xD;&#xA;TotalSips DCO&#xD;&#xA;TotalSips Storage&#xD;&#xA;TotalSips Montioring&#xD;&#xA;TotalSips Tools&#xD;&#xA;TotalSips Voice&#xD;&#xA;TotalSips Network&#xD;&#xA;TotalSips Security&#xD;&#xA;TotalSips Helpdesk&#xD;&#xA;TotalSips Remedy&#xD;&#xA;TotalSips Process&#xD;&#xA;TotalSips WSM&#xD;&#xA;&#xD;&#xA;sipsclosedbytower Messaging&#xD;&#xA;sipsclosedbytower Windows&#xD;&#xA;sipsclosedbytower Unix&#xD;&#xA;sipsclosedbytower DBA&#xD;&#xA;sipsclosedbytower DCO&#xD;&#xA;sipsclosedbytower Storage&#xD;&#xA;sipsclosedbytower Montioring&#xD;&#xA;sipsclosedbytower Tools&#xD;&#xA;sipsclosedbytower Voice&#xD;&#xA;sipsclosedbytower Network&#xD;&#xA;sipsclosedbytower Security&#xD;&#xA;sipsclosedbytower Helpdesk&#xD;&#xA;sipsclosedbytower Remedy&#xD;&#xA;sipsclosedbytower Process&#xD;&#xA;sipsclosedbytower WSM&#xD;&#xA;&#xD;&#xA;sipsinprogressbytower Messaging&#xD;&#xA;sipsinprogressbytower Windows&#xD;&#xA;sipsinprogressbytower Unix&#xD;&#xA;sipsinprogressbytower DBA&#xD;&#xA;sipsinprogressbytower DCO&#xD;&#xA;sipsinprogressbytower Storage&#xD;&#xA;sipsinprogressbytower Montioring&#xD;&#xA;sipsinprogressbytower Tools&#xD;&#xA;sipsinprogressbytower Voice&#xD;&#xA;sipsinprogressbytower Network&#xD;&#xA;sipsinprogressbytower Security&#xD;&#xA;sipsinprogressbytower Helpdesk&#xD;&#xA;sipsinprogressbytower Remedy&#xD;&#xA;sipsinprogressbytower Process&#xD;&#xA;sipsinprogressbytower WSM&#xD;&#xA;&#xD;&#xA;sipstatus Active&#xD;&#xA;sipstatus Closed&#xD;&#xA;sipstatus &quot;In Progress&quot;&#xD;&#xA;sipstatus Proposed&#xD;&#xA;sipstatus Rejected&#xD;&#xA;#####################################Update Towers List#################################&#xD;&#xA;&#xD;&#xA;Function dashupdatelist ($ISTower)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$ListName = &quot;Towers&quot;&#xD;&#xA;$list = $spWeb.Lists[$ListName]&#xD;&#xA;$items = $list.getitems()&#xD;&#xA;&#xD;&#xA;$input1 = &quot;.\Dashboard\&quot; + &quot;$ISTower&quot; + &quot;-&quot; + &quot;Totsip&quot; + &quot;_.txt&quot;&#xD;&#xA;$value = get-content $input1&#xD;&#xA;write-host $value&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;{&#xD;&#xA;if($item[&quot;IS Tower&quot;] -eq $ISTower)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;if($item[&quot;TotalSips&quot;] -ne $value)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$item[&quot;TotalSips&quot;] = $value;&#xD;&#xA;$item.update();&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#####################################Update sip closed by towers List##########################&#xD;&#xA;&#xD;&#xA;Function dashupdatesipcltlist ($ISTower)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$ListName = &quot;SIPClosedTower&quot;&#xD;&#xA;$list = $spWeb.Lists[$ListName]&#xD;&#xA;$items = $list.getitems()&#xD;&#xA;&#xD;&#xA;$input1 =  &quot;.\Dashboard\&quot; + $ISTower + &quot;-&quot; + &quot;sipclbt&quot; + &quot;_.txt&quot;&#xD;&#xA;$value = get-content $input1&#xD;&#xA;write-host $value&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;{&#xD;&#xA;if($item[&quot;IS Tower&quot;] -eq $ISTower)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;if($item[&quot;Count&quot;] -ne $value)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$item[&quot;Count&quot;] = $value;&#xD;&#xA;$item.update();&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#####################################Update sip inprogress by towers List##########################&#xD;&#xA;&#xD;&#xA;Function dashupdatesipinpltlist ($ISTower)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$ListName = &quot;SipsInProgressbyTowers&quot;&#xD;&#xA;$list = $spWeb.Lists[$ListName]&#xD;&#xA;$items = $list.getitems()&#xD;&#xA;&#xD;&#xA;$input1 =  &quot;.\Dashboard\&quot; + $ISTower + &quot;-&quot; + &quot;sipinprgt&quot; + &quot;_.txt&quot;&#xD;&#xA;$value = get-content $input1&#xD;&#xA;write-host $value&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;{&#xD;&#xA;if($item[&quot;IS Tower&quot;] -eq $ISTower)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;if($item[&quot;Count&quot;] -ne $value)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$item[&quot;Count&quot;] = $value;&#xD;&#xA;$item.update();&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#####################################Update sip status List##########################&#xD;&#xA;&#xD;&#xA;Function dashupdatesipstsltlist ($SIPSTATUS)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$ListName = &quot;InProgress&quot;&#xD;&#xA;$list = $spWeb.Lists[$ListName]&#xD;&#xA;$items = $list.getitems()&#xD;&#xA;&#xD;&#xA;$input1 = &quot;.\Dashboard\&quot; + $SIPSTATUS + &quot;-&quot; + &quot;sipst&quot; + &quot;_.txt&quot;&#xD;&#xA;$value = get-content $input1&#xD;&#xA;write-host $value&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;{&#xD;&#xA;if($item[&quot;Sip Status&quot;] -eq $SIPSTATUS)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;if($item[&quot;Count&quot;] -ne $value)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$item[&quot;Count&quot;] = $value;&#xD;&#xA;$item.update();&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#########################################Call Function##########################################&#xD;&#xA;dashupdatelist Messaging&#xD;&#xA;dashupdatelist Windows&#xD;&#xA;dashupdatelist Unix&#xD;&#xA;dashupdatelist DBA&#xD;&#xA;dashupdatelist DCO&#xD;&#xA;dashupdatelist Storage&#xD;&#xA;dashupdatelist Montioring&#xD;&#xA;dashupdatelist Tools&#xD;&#xA;dashupdatelist Voice&#xD;&#xA;dashupdatelist Network&#xD;&#xA;dashupdatelist Security&#xD;&#xA;dashupdatelist Helpdesk&#xD;&#xA;dashupdatelist Remedy&#xD;&#xA;dashupdatelist Process&#xD;&#xA;dashupdatelist WSM&#xD;&#xA;&#xD;&#xA;dashupdatesipcltlist Messaging&#xD;&#xA;dashupdatesipcltlist Windows&#xD;&#xA;dashupdatesipcltlist Unix&#xD;&#xA;dashupdatesipcltlist DBA&#xD;&#xA;dashupdatesipcltlist DCO&#xD;&#xA;dashupdatesipcltlist Storage&#xD;&#xA;dashupdatesipcltlist Montioring&#xD;&#xA;dashupdatesipcltlist Tools&#xD;&#xA;dashupdatesipcltlist Voice&#xD;&#xA;dashupdatesipcltlist Network&#xD;&#xA;dashupdatesipcltlist Security&#xD;&#xA;dashupdatesipcltlist Helpdesk&#xD;&#xA;dashupdatesipcltlist Remedy&#xD;&#xA;dashupdatesipcltlist Process&#xD;&#xA;dashupdatesipcltlist WSM&#xD;&#xA;&#xD;&#xA;dashupdatesipinpltlist Messaging&#xD;&#xA;dashupdatesipinpltlist Windows&#xD;&#xA;dashupdatesipinpltlist Unix&#xD;&#xA;dashupdatesipinpltlist DBA&#xD;&#xA;dashupdatesipinpltlist DCO&#xD;&#xA;dashupdatesipinpltlist Storage&#xD;&#xA;dashupdatesipinpltlist Montioring&#xD;&#xA;dashupdatesipinpltlist Tools&#xD;&#xA;dashupdatesipinpltlist Voice&#xD;&#xA;dashupdatesipinpltlist Network&#xD;&#xA;dashupdatesipinpltlist Security&#xD;&#xA;dashupdatesipinpltlist Helpdesk&#xD;&#xA;dashupdatesipinpltlist Remedy&#xD;&#xA;dashupdatesipinpltlist Process&#xD;&#xA;dashupdatesipinpltlist WSM&#xD;&#xA;&#xD;&#xA;dashupdatesipstsltlist Active&#xD;&#xA;dashupdatesipstsltlist Closed&#xD;&#xA;dashupdatesipstsltlist &quot;In Progress&quot;&#xD;&#xA;dashupdatesipstsltlist Proposed&#xD;&#xA;dashupdatesipstsltlist Rejected&#xD;&#xA;&#xD;&#xA;###########################################################################################################" />
  <Code Content="###############################################################################&#xD;&#xA;#             Authors: Vikas Sukhija&#xD;&#xA;#             Date: 08/12/2013&#xD;&#xA;#             Description: Script to update sharepoint lists on SIP site&#xD;&#xA;#                          This will enable updating of DashBoard &#xD;&#xA;###############################################################################&#xD;&#xA;&#xD;&#xA;If ((Get-PSSnapin | where {$_.Name -match &quot;SharePoint.Powershell&quot;}) -eq $null)&#xD;&#xA;{&#xD;&#xA;&#x9;Add-PSSnapin Microsoft.SharePoint.Powershell&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;$date = get-date -format d&#xD;&#xA;$date = $date.ToString().Replace(“/”, “-”)&#xD;&#xA;&#xD;&#xA;$siteurl = &quot;http://sharepointlab/sites/SIP&quot;&#xD;&#xA;$ListName = &quot;SIPs&quot; &#xD;&#xA;&#xD;&#xA;##################################Get List##########################&#xD;&#xA;&#xD;&#xA;$spWeb = Get-SPWeb $siteurl                                                  &#xD;&#xA;$list = $spWeb.Lists[$ListName]&#xD;&#xA;$items = $list.getitems()&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;####################################Create Count variables############&#xD;&#xA;$Collection=@()&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;#####################Total SIPs######################################&#xD;&#xA;function TotalSips ($IsTower) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;if($item[&quot;IS Tower&quot;] -eq $IsTower)&#xD;&#xA;{&#xD;&#xA;$Collection += $item.Name&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;Write-host $Collection.count&#xD;&#xA;$output = &quot;.\Dashboard\&quot; + $IsTower + &quot;-&quot; + &quot;Totsip&quot; + &quot;_.txt&quot;&#xD;&#xA;$Collection.count | out-file $output&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;###########################Sips Closed by Tower##########################&#xD;&#xA;&#xD;&#xA;function sipsclosedbytower ($IsTower) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;if(($item[&quot;IS Tower&quot;] -eq $IsTower) -and ($item[&quot;SIP Status&quot;] -eq &quot;Closed&quot;))&#xD;&#xA;{&#xD;&#xA;$Collection += $item.Name&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;Write-host $Collection.count&#xD;&#xA;$output = &quot;.\Dashboard\&quot; + $IsTower + &quot;-&quot; + &quot;sipclbt&quot; + &quot;_.txt&quot;&#xD;&#xA;$Collection.count | out-file $output&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;###########################Sips in-progress by Tower##########################&#xD;&#xA;&#xD;&#xA;function sipsinprogressbytower ($IsTower) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;if(($item[&quot;IS Tower&quot;] -eq $IsTower) -and ($item[&quot;SIP Status&quot;] -eq &quot;In Progress&quot;))&#xD;&#xA;{&#xD;&#xA;$Collection += $item.Name&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;Write-host $Collection.count&#xD;&#xA;$output = &quot;.\Dashboard\&quot; + $IsTower + &quot;-&quot; + &quot;sipinprgt&quot; + &quot;_.txt&quot;&#xD;&#xA;$Collection.count | out-file $output&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;################################Total Active,Closed,progress,Proposed,Rejected######&#xD;&#xA;&#xD;&#xA;function sipstatus ($SIPSTATUS) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;if($item[&quot;SIP Status&quot;] -eq $SIPSTATUS)&#xD;&#xA;{&#xD;&#xA;$Collection += $item.Name&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;Write-host $Collection.count&#xD;&#xA;$output = &quot;.\Dashboard\&quot; + $SIPSTATUS + &quot;-&quot; + &quot;sipst&quot; + &quot;_.txt&quot;&#xD;&#xA;$Collection.count | out-file $output&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;####################################################################################&#xD;&#xA;&#xD;&#xA;TotalSips Messaging&#xD;&#xA;TotalSips Windows&#xD;&#xA;TotalSips Unix&#xD;&#xA;TotalSips DBA&#xD;&#xA;TotalSips DCO&#xD;&#xA;TotalSips Storage&#xD;&#xA;TotalSips Montioring&#xD;&#xA;TotalSips Tools&#xD;&#xA;TotalSips Voice&#xD;&#xA;TotalSips Network&#xD;&#xA;TotalSips Security&#xD;&#xA;TotalSips Helpdesk&#xD;&#xA;TotalSips Remedy&#xD;&#xA;TotalSips Process&#xD;&#xA;TotalSips WSM&#xD;&#xA;&#xD;&#xA;sipsclosedbytower Messaging&#xD;&#xA;sipsclosedbytower Windows&#xD;&#xA;sipsclosedbytower Unix&#xD;&#xA;sipsclosedbytower DBA&#xD;&#xA;sipsclosedbytower DCO&#xD;&#xA;sipsclosedbytower Storage&#xD;&#xA;sipsclosedbytower Montioring&#xD;&#xA;sipsclosedbytower Tools&#xD;&#xA;sipsclosedbytower Voice&#xD;&#xA;sipsclosedbytower Network&#xD;&#xA;sipsclosedbytower Security&#xD;&#xA;sipsclosedbytower Helpdesk&#xD;&#xA;sipsclosedbytower Remedy&#xD;&#xA;sipsclosedbytower Process&#xD;&#xA;sipsclosedbytower WSM&#xD;&#xA;&#xD;&#xA;sipsinprogressbytower Messaging&#xD;&#xA;sipsinprogressbytower Windows&#xD;&#xA;sipsinprogressbytower Unix&#xD;&#xA;sipsinprogressbytower DBA&#xD;&#xA;sipsinprogressbytower DCO&#xD;&#xA;sipsinprogressbytower Storage&#xD;&#xA;sipsinprogressbytower Montioring&#xD;&#xA;sipsinprogressbytower Tools&#xD;&#xA;sipsinprogressbytower Voice&#xD;&#xA;sipsinprogressbytower Network&#xD;&#xA;sipsinprogressbytower Security&#xD;&#xA;sipsinprogressbytower Helpdesk&#xD;&#xA;sipsinprogressbytower Remedy&#xD;&#xA;sipsinprogressbytower Process&#xD;&#xA;sipsinprogressbytower WSM&#xD;&#xA;&#xD;&#xA;sipstatus Active&#xD;&#xA;sipstatus Closed&#xD;&#xA;sipstatus &quot;In Progress&quot;&#xD;&#xA;sipstatus Proposed&#xD;&#xA;sipstatus Rejected&#xD;&#xA;#####################################Update Towers List#################################&#xD;&#xA;&#xD;&#xA;Function dashupdatelist ($ISTower)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$ListName = &quot;Towers&quot;&#xD;&#xA;$list = $spWeb.Lists[$ListName]&#xD;&#xA;$items = $list.getitems()&#xD;&#xA;&#xD;&#xA;$input1 = &quot;.\Dashboard\&quot; + &quot;$ISTower&quot; + &quot;-&quot; + &quot;Totsip&quot; + &quot;_.txt&quot;&#xD;&#xA;$value = get-content $input1&#xD;&#xA;write-host $value&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;{&#xD;&#xA;if($item[&quot;IS Tower&quot;] -eq $ISTower)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;if($item[&quot;TotalSips&quot;] -ne $value)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$item[&quot;TotalSips&quot;] = $value;&#xD;&#xA;$item.update();&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#####################################Update sip closed by towers List##########################&#xD;&#xA;&#xD;&#xA;Function dashupdatesipcltlist ($ISTower)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$ListName = &quot;SIPClosedTower&quot;&#xD;&#xA;$list = $spWeb.Lists[$ListName]&#xD;&#xA;$items = $list.getitems()&#xD;&#xA;&#xD;&#xA;$input1 =  &quot;.\Dashboard\&quot; + $ISTower + &quot;-&quot; + &quot;sipclbt&quot; + &quot;_.txt&quot;&#xD;&#xA;$value = get-content $input1&#xD;&#xA;write-host $value&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;{&#xD;&#xA;if($item[&quot;IS Tower&quot;] -eq $ISTower)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;if($item[&quot;Count&quot;] -ne $value)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$item[&quot;Count&quot;] = $value;&#xD;&#xA;$item.update();&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#####################################Update sip inprogress by towers List##########################&#xD;&#xA;&#xD;&#xA;Function dashupdatesipinpltlist ($ISTower)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$ListName = &quot;SipsInProgressbyTowers&quot;&#xD;&#xA;$list = $spWeb.Lists[$ListName]&#xD;&#xA;$items = $list.getitems()&#xD;&#xA;&#xD;&#xA;$input1 =  &quot;.\Dashboard\&quot; + $ISTower + &quot;-&quot; + &quot;sipinprgt&quot; + &quot;_.txt&quot;&#xD;&#xA;$value = get-content $input1&#xD;&#xA;write-host $value&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;{&#xD;&#xA;if($item[&quot;IS Tower&quot;] -eq $ISTower)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;if($item[&quot;Count&quot;] -ne $value)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$item[&quot;Count&quot;] = $value;&#xD;&#xA;$item.update();&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#####################################Update sip status List##########################&#xD;&#xA;&#xD;&#xA;Function dashupdatesipstsltlist ($SIPSTATUS)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$ListName = &quot;InProgress&quot;&#xD;&#xA;$list = $spWeb.Lists[$ListName]&#xD;&#xA;$items = $list.getitems()&#xD;&#xA;&#xD;&#xA;$input1 = &quot;.\Dashboard\&quot; + $SIPSTATUS + &quot;-&quot; + &quot;sipst&quot; + &quot;_.txt&quot;&#xD;&#xA;$value = get-content $input1&#xD;&#xA;write-host $value&#xD;&#xA;&#xD;&#xA;foreach($item in $items)&#xD;&#xA;{&#xD;&#xA;if($item[&quot;Sip Status&quot;] -eq $SIPSTATUS)&#xD;&#xA;&#xD;&#xA;{&#xD;&#xA;if($item[&quot;Count&quot;] -ne $value)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;$item[&quot;Count&quot;] = $value;&#xD;&#xA;$item.update();&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#########################################Call Function##########################################&#xD;&#xA;dashupdatelist Messaging&#xD;&#xA;dashupdatelist Windows&#xD;&#xA;dashupdatelist Unix&#xD;&#xA;dashupdatelist DBA&#xD;&#xA;dashupdatelist DCO&#xD;&#xA;dashupdatelist Storage&#xD;&#xA;dashupdatelist Montioring&#xD;&#xA;dashupdatelist Tools&#xD;&#xA;dashupdatelist Voice&#xD;&#xA;dashupdatelist Network&#xD;&#xA;dashupdatelist Security&#xD;&#xA;dashupdatelist Helpdesk&#xD;&#xA;dashupdatelist Remedy&#xD;&#xA;dashupdatelist Process&#xD;&#xA;dashupdatelist WSM&#xD;&#xA;&#xD;&#xA;dashupdatesipcltlist Messaging&#xD;&#xA;dashupdatesipcltlist Windows&#xD;&#xA;dashupdatesipcltlist Unix&#xD;&#xA;dashupdatesipcltlist DBA&#xD;&#xA;dashupdatesipcltlist DCO&#xD;&#xA;dashupdatesipcltlist Storage&#xD;&#xA;dashupdatesipcltlist Montioring&#xD;&#xA;dashupdatesipcltlist Tools&#xD;&#xA;dashupdatesipcltlist Voice&#xD;&#xA;dashupdatesipcltlist Network&#xD;&#xA;dashupdatesipcltlist Security&#xD;&#xA;dashupdatesipcltlist Helpdesk&#xD;&#xA;dashupdatesipcltlist Remedy&#xD;&#xA;dashupdatesipcltlist Process&#xD;&#xA;dashupdatesipcltlist WSM&#xD;&#xA;&#xD;&#xA;dashupdatesipinpltlist Messaging&#xD;&#xA;dashupdatesipinpltlist Windows&#xD;&#xA;dashupdatesipinpltlist Unix&#xD;&#xA;dashupdatesipinpltlist DBA&#xD;&#xA;dashupdatesipinpltlist DCO&#xD;&#xA;dashupdatesipinpltlist Storage&#xD;&#xA;dashupdatesipinpltlist Montioring&#xD;&#xA;dashupdatesipinpltlist Tools&#xD;&#xA;dashupdatesipinpltlist Voice&#xD;&#xA;dashupdatesipinpltlist Network&#xD;&#xA;dashupdatesipinpltlist Security&#xD;&#xA;dashupdatesipinpltlist Helpdesk&#xD;&#xA;dashupdatesipinpltlist Remedy&#xD;&#xA;dashupdatesipinpltlist Process&#xD;&#xA;dashupdatesipinpltlist WSM&#xD;&#xA;&#xD;&#xA;dashupdatesipstsltlist Active&#xD;&#xA;dashupdatesipstsltlist Closed&#xD;&#xA;dashupdatesipstsltlist &quot;In Progress&quot;&#xD;&#xA;dashupdatesipstsltlist Proposed&#xD;&#xA;dashupdatesipstsltlist Rejected&#xD;&#xA;&#xD;&#xA;###########################################################################################################" />
</CodeSnippets>