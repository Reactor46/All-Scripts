CustomTargets.ps1
	The custom targets PS file can be used to perform custom actions at certain events during the deployment process
	The available Events are (in order how they are called): 
		- RunCustomPrerequisites
		- CheckCustomPreconditions
		- Initialize
		- BeforeDeploy/BeforeRetract/BeforeUpdate
		- AfterDeploy/AfterRetract/AfterUpdate
		- SkipSolution
		- Finalize

Extensions:
	SPSD has an extension system which allows you to develop re-usable extensions which can be just dropped and registered in any SPSD deployment package.
	This makes it easy for to inject common tasks into the deployment process , 
	e.g. creating a ContentTypeHub, creating a site structure, importing managed meta data etc.

	Please have a look at the example extension in the extensions folder to understand how it works.
	You can publish your extensions to the Microsoft Technet Gallery an tag it with "SPSD" to be found through this link
	http://gallery.technet.microsoft.com/site/search?f%5B0%5D.Type=Tag&f%5B0%5D.Value=SPSD&f%5B0%5D.Text=SPSD


Logging:
	 You can (and should) use the SPSD Logging function to write to the PowerShell window/log file 
	 instead of using Write-Host, Write-Output, Write Error
 
	 Using the log method provided by SPSD will help you to assure that 
	 - all messages fit well into the rest of the log
	 - messages are still logged even if SPSD is run from a custom PS Host
	 - messages of remoted PS sessions are logged
 
	 Example:
		  Log "My custom log message" -Type $SPSD.LogTypes.Normal -Indent
		  ...your commands...
		  LogOutdent
 
	 Valid parameters for the "Log" function are:
	 -Message (or first parameter) [string]
		The message which should be logged
	 -Type [int]
		Values:
		0 or $SPSD.LogTypes.Success     -> Green
		1 or $SPSD.LogTypes.Error       -> Red
		2 or $SPSD.LogTypes.Warning     -> Yellow
		3 or $SPSD.LogTypes.Information -> White
		4 or $SPSD.LogTypes.Normal      -> Gray
	 -NoNewline [switch]
	   Will not add a line break after the message, e.g. for progress checks or if you have to change the log type for the rest of the line
	 -Indent [switch]
 		Indents all following logging messages by 2 characters (adds to previous indentation)
	 -Outdent [switch]
 		Outdents all following logging messages by 2 characters (subtracts from previous indentation)
	 -NoIndent [switch]
 		Disregards current indentation, i.e. when the previous log message had -NoNewline set

	 Additionally you can use the commands 
	   LogIndent
	   LogOutdent
	 to adjust the current indentation level without printing a log message
