<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="[bool] $ReportOnlyFilesWithVersions = $true&#xD;&#xA;&#xD;&#xA;#write header&#xD;&#xA;$OutFile = &quot;C:\Scripts\StorageReport-&quot; + $(get-date -f yyyyMMdd-HHmmss) + &quot;.txt&quot;&#xD;&#xA;$file = New-Object System.IO.StreamWriter $OutFile&#xD;&#xA;&#xD;&#xA;$file.WriteLine(&quot;WebApplication`tSiteCollection`tSite`tDocumentLibrary`tItemName`tItemVersions`tItemSize`tItemVersionsSize`tItemTotalSize&quot;) &#xD;&#xA;&#xD;&#xA;$SiteUrl = &quot;http://teams.corp.local&quot;&#xD;&#xA;$site = new-Object Microsoft.SharePoint.SPSite($SiteUrl)           &#xD;&#xA;$webapp = $site.WebApplication&#xD;&#xA;foreach($currentsite in $webapp.Sites)&#xD;&#xA;{&#xD;&#xA;   write-host $currentSite.Url&#xD;&#xA;   foreach($currentWeb in $currentSite.AllWebs)&#xD;&#xA;   {              &#xD;&#xA;      write-host $currentWeb.Url&#xD;&#xA;      $lists = $currentWeb.Lists | Where {$_.BaseType -eq &quot;DocumentLibrary&quot;} &#xD;&#xA;      foreach($currentList in $lists)&#xD;&#xA;      {&#xD;&#xA;         foreach($currentListItem in $currentList.Items)                 &#xD;&#xA;         {  &#xD;&#xA;           $versionssize = 0&#xD;&#xA;           if($currentListItem.Versions.Count -gt 1)&#xD;&#xA;           {&#xD;&#xA;                foreach($version in $currentListItem.File.Versions)&#xD;&#xA;                {&#xD;&#xA;                   $versionssize = $versionssize + $version.Size&#xD;&#xA;                }&#xD;&#xA;                $totalsize = $versionssize + $currentListItem.File.Length&#xD;&#xA;                $line = &quot;{0}`t{1}`t{2}`t{3}`t{4}`t{5}`t{6}`t{7}`t{8}&quot; -f $webapp.Url,$currentSite.ServerRelativeUrl,$currentWeb.ServerRelativeUrl,$currentList.Title, $currentListItem.Name, $currentListItem.Versions.Count, $currentListItem.File.Length, $versionssize ,$totalsize &#xD;&#xA;                $file.WriteLine($line)&#xD;&#xA;           &#xD;&#xA;           }&#xD;&#xA;           else&#xD;&#xA;           {&#xD;&#xA;                if ($ReportOnlyFilesWithVersions -eq $false)&#xD;&#xA;                { &#xD;&#xA;                    $totalsize = $versionssize + $currentListItem.File.Length&#xD;&#xA;                    $line = &quot;{0}`t{1}`t{2}`t{3}`t{4}`t{5}`t{6}`t{7}`t{8}&quot; -f $webapp.Url,$currentSite.ServerRelativeUrl,$currentWeb.ServerRelativeUrl,$currentList.Title, $currentListItem.Name, $currentListItem.Versions.Count, $currentListItem.File.Length, $versionssize ,$totalsize &#xD;&#xA;                    $file.WriteLine($line)&#xD;&#xA;                }&#xD;&#xA;           }&#xD;&#xA;         }&#xD;&#xA;      }                                    &#xD;&#xA;      $currentWeb.Dispose()         &#xD;&#xA;   }                 &#xD;&#xA;   $currentSite.Dispose()&#xD;&#xA;}&#xD;&#xA;$site.Dispose()  &#xD;&#xA;$file.Close()&#xD;&#xA; " />
  <Code Content="[bool] $ReportOnlyFilesWithVersions = $true&#xD;&#xA;&#xD;&#xA;#write header&#xD;&#xA;$OutFile = &quot;C:\Scripts\StorageReport-&quot; + $(get-date -f yyyyMMdd-HHmmss) + &quot;.txt&quot;&#xD;&#xA;$file = New-Object System.IO.StreamWriter $OutFile&#xD;&#xA;&#xD;&#xA;$file.WriteLine(&quot;WebApplication`tSiteCollection`tSite`tDocumentLibrary`tItemName`tItemVersions`tItemSize`tItemVersionsSize`tItemTotalSize&quot;) &#xD;&#xA;&#xD;&#xA;$SiteUrl = &quot;http://teams.corp.local&quot;&#xD;&#xA;$site = new-Object Microsoft.SharePoint.SPSite($SiteUrl)           &#xD;&#xA;$webapp = $site.WebApplication&#xD;&#xA;foreach($currentsite in $webapp.Sites)&#xD;&#xA;{&#xD;&#xA;   write-host $currentSite.Url&#xD;&#xA;   foreach($currentWeb in $currentSite.AllWebs)&#xD;&#xA;   {              &#xD;&#xA;      write-host $currentWeb.Url&#xD;&#xA;      $lists = $currentWeb.Lists | Where {$_.BaseType -eq &quot;DocumentLibrary&quot;} &#xD;&#xA;      foreach($currentList in $lists)&#xD;&#xA;      {&#xD;&#xA;         foreach($currentListItem in $currentList.Items)                 &#xD;&#xA;         {  &#xD;&#xA;           $versionssize = 0&#xD;&#xA;           if($currentListItem.Versions.Count -gt 1)&#xD;&#xA;           {&#xD;&#xA;                foreach($version in $currentListItem.File.Versions)&#xD;&#xA;                {&#xD;&#xA;                   $versionssize = $versionssize + $version.Size&#xD;&#xA;                }&#xD;&#xA;                $totalsize = $versionssize + $currentListItem.File.Length&#xD;&#xA;                $line = &quot;{0}`t{1}`t{2}`t{3}`t{4}`t{5}`t{6}`t{7}`t{8}&quot; -f $webapp.Url,$currentSite.ServerRelativeUrl,$currentWeb.ServerRelativeUrl,$currentList.Title, $currentListItem.Name, $currentListItem.Versions.Count, $currentListItem.File.Length, $versionssize ,$totalsize &#xD;&#xA;                $file.WriteLine($line)&#xD;&#xA;           &#xD;&#xA;           }&#xD;&#xA;           else&#xD;&#xA;           {&#xD;&#xA;                if ($ReportOnlyFilesWithVersions -eq $false)&#xD;&#xA;                { &#xD;&#xA;                    $totalsize = $versionssize + $currentListItem.File.Length&#xD;&#xA;                    $line = &quot;{0}`t{1}`t{2}`t{3}`t{4}`t{5}`t{6}`t{7}`t{8}&quot; -f $webapp.Url,$currentSite.ServerRelativeUrl,$currentWeb.ServerRelativeUrl,$currentList.Title, $currentListItem.Name, $currentListItem.Versions.Count, $currentListItem.File.Length, $versionssize ,$totalsize &#xD;&#xA;                    $file.WriteLine($line)&#xD;&#xA;                }&#xD;&#xA;           }&#xD;&#xA;         }&#xD;&#xA;      }                                    &#xD;&#xA;      $currentWeb.Dispose()         &#xD;&#xA;   }                 &#xD;&#xA;   $currentSite.Dispose()&#xD;&#xA;}&#xD;&#xA;$site.Dispose()  &#xD;&#xA;$file.Close()&#xD;&#xA; " />
</CodeSnippets>