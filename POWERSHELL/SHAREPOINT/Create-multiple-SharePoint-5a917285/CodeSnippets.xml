<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="param (&#xD;&#xA;        [Parameter(Mandatory=$true)]&#xD;&#xA;        [string]$importfile=&quot;&quot;&#xD;&#xA;      )&#xD;&#xA;&#xD;&#xA;# Add SharePoint powershell snapin.&#xD;&#xA;Add-PSSnapin &quot;Microsoft.SharePoint.PowerShell&quot;&#xD;&#xA;&#xD;&#xA;# To create a claims-based authentication provider.&#xD;&#xA;$ap = New-SPAuthenticationProvider&#xD;&#xA;&#xD;&#xA;# Import all details from a .csv file and create web applications.&#xD;&#xA;# If you use other delimiter, just change it in the script.&#xD;&#xA;Import-Csv -Path $importfile -Delimiter &quot;;&quot; |&#xD;&#xA;    ForEach-Object {&#xD;&#xA;       if (((Get-SPManagedAccount).UserName -notcontains $_.AppPoolUserName) -eq $True)&#xD;&#xA;          {&#xD;&#xA;           $appPoolCred = Get-Credential $_.appPoolUserName&#xD;&#xA;           New-SPManagedAccount -Credential $appPoolCred&#xD;&#xA;          }&#xD;&#xA;          New-SPWebApplication -Name $_.AppName -ApplicationPool $_.AppPoolName`&#xD;&#xA;            -ApplicationPoolAccount $_.AppPoolUserName `&#xD;&#xA;            -DatabaseName $_.DatabaseName -HostHeader $_.HostHeader `&#xD;&#xA;            -URL $_.url -Port $_.port -AuthenticationProvider $ap&#xD;&#xA;    }" />
  <Code Content="param (&#xD;&#xA;        [Parameter(Mandatory=$true)]&#xD;&#xA;        [string]$importfile=&quot;&quot;&#xD;&#xA;      )&#xD;&#xA;&#xD;&#xA;# Add SharePoint powershell snapin.&#xD;&#xA;Add-PSSnapin &quot;Microsoft.SharePoint.PowerShell&quot;&#xD;&#xA;&#xD;&#xA;# To create a claims-based authentication provider.&#xD;&#xA;$ap = New-SPAuthenticationProvider&#xD;&#xA;&#xD;&#xA;# Import all details from a .csv file and create web applications.&#xD;&#xA;# If you use other delimiter, just change it in the script.&#xD;&#xA;Import-Csv -Path $importfile -Delimiter &quot;;&quot; |&#xD;&#xA;    ForEach-Object {&#xD;&#xA;       if (((Get-SPManagedAccount).UserName -notcontains $_.AppPoolUserName) -eq $True)&#xD;&#xA;          {&#xD;&#xA;           $appPoolCred = Get-Credential $_.appPoolUserName&#xD;&#xA;           New-SPManagedAccount -Credential $appPoolCred&#xD;&#xA;          }&#xD;&#xA;          New-SPWebApplication -Name $_.AppName -ApplicationPool $_.AppPoolName`&#xD;&#xA;            -ApplicationPoolAccount $_.AppPoolUserName `&#xD;&#xA;            -DatabaseName $_.DatabaseName -HostHeader $_.HostHeader `&#xD;&#xA;            -URL $_.url -Port $_.port -AuthenticationProvider $ap&#xD;&#xA;    }" />
</CodeSnippets>