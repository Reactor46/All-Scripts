<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="#***************************************************************************&#xD;&#xA;#    Script to Get Content Db report for Different Farms                    * &#xD;&#xA;#    Date   : 7th August,2104                                              *&#xD;&#xA;#    Author : Abhishek Gupta                                               *&#xD;&#xA;#    Reviewer: Vikas Sukhija                                               *&#xD;&#xA;#    modified: Added logging, error checking &amp; converted to function       *&#xD;&#xA;#***************************************************************************&#xD;&#xA;$date = get-date -format d&#xD;&#xA;# replace \ by -&#xD;&#xA;$time = get-date -format t&#xD;&#xA;$month = get-date &#xD;&#xA;$month1 = $month.month&#xD;&#xA;$year1 = $month.year&#xD;&#xA;&#xD;&#xA;$date = $date.ToString().Replace(“/”, “-”)&#xD;&#xA;&#xD;&#xA;$time = $time.ToString().Replace(&quot;:&quot;, &quot;-&quot;)&#xD;&#xA;$time = $time.ToString().Replace(&quot; &quot;, &quot;&quot;)&#xD;&#xA;&#xD;&#xA;$log1 = &quot;.\Processed\Logs&quot; + &quot;\&quot; + &quot;skipcsv_&quot; + $date + &quot;_.log&quot;&#xD;&#xA;#$log2 = &quot;.\Processed\Logs&quot; + &quot;\&quot; + &quot;Modified_&quot; + $month1 +&quot;_&quot; + $year1 +&quot;_.log&quot;&#xD;&#xA;#$output1 = &quot;.\&quot; + &quot;G_DistributionList_&quot; + $date + &quot;_&quot; + $time + &quot;_.csv&quot; &#xD;&#xA;&#xD;&#xA;$logs = &quot;.\Processed\Logs&quot; + &quot;\&quot; + &quot;Powershell&quot; + $date + &quot;_&quot; + $time + &quot;_.txt&quot;&#xD;&#xA;&#xD;&#xA;Start-Transcript -Path $logs &#xD;&#xA;&#xD;&#xA;# ***************************************************************************&#xD;&#xA;# Variable initializing to send mail&#xD;&#xA;$TXTFile = &quot;.\ContentDBReport.html&quot;&#xD;&#xA;$SMTPServer = &quot;smtp.lab.com&quot; &#xD;&#xA;$emailFrom = &quot;Messaging@lab.com&quot; &#xD;&#xA;$emailTo = &quot;vikassukhija@lab.com&quot; &#xD;&#xA;$subject = &quot;Sharepoint Farms Content databases Report&quot; &#xD;&#xA;$emailBody = &quot;Dailyreport on Sharepoint Farms Content databases&quot;&#xD;&#xA;&#xD;&#xA;#****************************************************************************&#xD;&#xA;# HTML code to format output&#xD;&#xA;$b = &quot;&lt;style&gt;&lt;!--mce:0--&gt;&lt;/style&gt;&quot;&#xD;&#xA;&#xD;&#xA;#********************************************************************************&#xD;&#xA;# Creating PSSession and Loading Snapin(make sure your account has rights to sharepoint)&#xD;&#xA;&#xD;&#xA;$cred1 = Get-Credential&#xD;&#xA;&#xD;&#xA;$s1 = New-PSSession -ComputerName Server1 -Authentication CredSSP -Credential $cred1&#xD;&#xA;$s2 = New-PSSession -ComputerName Server2 -Authentication CredSSP -Credential $cred1&#xD;&#xA;$s3 = New-PSSession -ComputerName Server3 -Authentication CredSSP -Credential $cred1&#xD;&#xA;$s4 = New-PSSession -ComputerName server4 -Authentication CredSSP -Credential $cred1&#xD;&#xA;&#xD;&#xA;Function ContentReport ($session){&#xD;&#xA;&#xD;&#xA;Invoke-Command -Session $session -ScriptBlock {Add-PSSnapin Microsoft.SharePoint.PowerShell}&#xD;&#xA;&#xD;&#xA;$f1 = Invoke-Command -Session $session -ScriptBlock {Get-SPWebApplication | Get-SPContentDatabase}&#xD;&#xA;$g1 = $f1 | Select-Object DisplayName,WebApplication,CurrentSiteCount,disksizerequired,WarningSiteCount,MaximumSiteCount | &#xD;&#xA;      ConvertTo-Html -Fragment DisplayName,WebApplication,WarningSiteCount,MaximumSiteCount,@{L='DiskSizeRequired';E={&#xD;&#xA;                                          if($_.disksizerequired -gt 100Gb){&#xD;&#xA;                                               &quot;#font&quot;+$_.disksizerequired+&quot;font#&quot;&#xD;&#xA;                                          }elseif($_.disksizerequired -ge 80Gb){&#xD;&#xA;                                                &quot;#blue&quot;+$_.disksizerequired+&quot;blue#&quot;}&#xD;&#xA;                                          else{&#xD;&#xA;                                               $_.disksizerequired&#xD;&#xA;                                          }&#xD;&#xA;                                       }&#xD;&#xA;                                 },@{L='CurrentSiteCount';E={&#xD;&#xA;                                 if($_.CurrentSiteCount -ge $_.WarningSiteCount){ &#xD;&#xA;                                 &quot;#blue&quot;+$_.CurrentSiteCount+&quot;blue#&quot;&#xD;&#xA;                                 }else{&#xD;&#xA;                                               $_.CurrentSiteCount&#xD;&#xA;                                          }&#xD;&#xA;                                          }&#xD;&#xA;                                          }                            &#xD;&#xA;$g1 = $g1 -replace (&quot;#font&quot;,'&lt;span style=&quot;color:black; background-color:red&quot; &gt;')&#xD;&#xA;$g1 = $g1 -replace &quot;font#&quot;,&quot;&lt;/span&gt;&quot;&#xD;&#xA;$g1 = $g1 -replace ('#blue','&lt;span style=&quot;color:black; background-color:orange&quot;&gt; ')&#xD;&#xA;$g1 = $g1 -replace &quot;blue#&quot;,&quot;&lt;/span&gt;&quot;&#xD;&#xA;&#xD;&#xA;return $g1&#xD;&#xA;}&#xD;&#xA;###############call function for diffrent farms###################################################&#xD;&#xA;&#xD;&#xA;$h1 = ContentReport $s1&#xD;&#xA;$h2 = ContentReport $s2&#xD;&#xA;$h3 = ContentReport $s3&#xD;&#xA;$h4 = ContentReport $s4&#xD;&#xA;&#xD;&#xA;##############################Convert to HTML ####################################################&#xD;&#xA;&#xD;&#xA;ConvertTo-HTML -head $b -Body &quot;&lt;h1&gt;$(Get-Date) Sharepoint Farm Database Content DB Report&lt;/h1&gt; &lt;br /&gt; &#xD;&#xA;&lt;h2&gt;SharePoint_ParentFarm $h1 SharePoint_IntranetFarm  $h2 SharePoint_GalwayFarm  $h3 SharePoint_TokyoFarm  $h4&lt;/h2&gt;&quot; | &#xD;&#xA;Out-File $TXTFile&#xD;&#xA;&#xD;&#xA;# Code to Send Mail &#xD;&#xA;Send-MailMessage -SmtpServer $SMTPServer -From $emailFrom -To $emailTo -Subject $subject -Body $emailBody -Attachment $TXTFile&#xD;&#xA;&#xD;&#xA;if ($error -ne $null)&#xD;&#xA;      {&#xD;&#xA;#SMTP Relay address&#xD;&#xA;$msg = new-object Net.Mail.MailMessage&#xD;&#xA;$smtp = new-object Net.Mail.SmtpClient($smtpServer)&#xD;&#xA;&#xD;&#xA;#Mail sender&#xD;&#xA;$msg.From = $emailFrom&#xD;&#xA;#mail recipient&#xD;&#xA;$msg.To.Add($emailTo)&#xD;&#xA;#$msg.To.Add($email2)&#xD;&#xA;$msg.Subject = &quot;Sharepoint Content DB Script error&quot;&#xD;&#xA;$msg.Body = $error&#xD;&#xA;$smtp.Send($msg)&#xD;&#xA;$error.clear()&#xD;&#xA;       }&#xD;&#xA;  else&#xD;&#xA;&#xD;&#xA;      {&#xD;&#xA;    Write-host &quot;no errors till now&quot;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;Stop-Transcript&#xD;&#xA;#*************************************************************************************************&#xD;&#xA;" />
  <Code Content="#***************************************************************************&#xD;&#xA;#    Script to Get Content Db report for Different Farms                    * &#xD;&#xA;#    Date   : 7th August,2104                                              *&#xD;&#xA;#    Author : Abhishek Gupta                                               *&#xD;&#xA;#    Reviewer: Vikas Sukhija                                               *&#xD;&#xA;#    modified: Added logging, error checking &amp; converted to function       *&#xD;&#xA;#***************************************************************************&#xD;&#xA;$date = get-date -format d&#xD;&#xA;# replace \ by -&#xD;&#xA;$time = get-date -format t&#xD;&#xA;$month = get-date &#xD;&#xA;$month1 = $month.month&#xD;&#xA;$year1 = $month.year&#xD;&#xA;&#xD;&#xA;$date = $date.ToString().Replace(“/”, “-”)&#xD;&#xA;&#xD;&#xA;$time = $time.ToString().Replace(&quot;:&quot;, &quot;-&quot;)&#xD;&#xA;$time = $time.ToString().Replace(&quot; &quot;, &quot;&quot;)&#xD;&#xA;&#xD;&#xA;$log1 = &quot;.\Processed\Logs&quot; + &quot;\&quot; + &quot;skipcsv_&quot; + $date + &quot;_.log&quot;&#xD;&#xA;#$log2 = &quot;.\Processed\Logs&quot; + &quot;\&quot; + &quot;Modified_&quot; + $month1 +&quot;_&quot; + $year1 +&quot;_.log&quot;&#xD;&#xA;#$output1 = &quot;.\&quot; + &quot;G_DistributionList_&quot; + $date + &quot;_&quot; + $time + &quot;_.csv&quot; &#xD;&#xA;&#xD;&#xA;$logs = &quot;.\Processed\Logs&quot; + &quot;\&quot; + &quot;Powershell&quot; + $date + &quot;_&quot; + $time + &quot;_.txt&quot;&#xD;&#xA;&#xD;&#xA;Start-Transcript -Path $logs &#xD;&#xA;&#xD;&#xA;# ***************************************************************************&#xD;&#xA;# Variable initializing to send mail&#xD;&#xA;$TXTFile = &quot;.\ContentDBReport.html&quot;&#xD;&#xA;$SMTPServer = &quot;smtp.lab.com&quot; &#xD;&#xA;$emailFrom = &quot;Messaging@lab.com&quot; &#xD;&#xA;$emailTo = &quot;vikassukhija@lab.com&quot; &#xD;&#xA;$subject = &quot;Sharepoint Farms Content databases Report&quot; &#xD;&#xA;$emailBody = &quot;Dailyreport on Sharepoint Farms Content databases&quot;&#xD;&#xA;&#xD;&#xA;#****************************************************************************&#xD;&#xA;# HTML code to format output&#xD;&#xA;$b = &quot;&lt;style&gt;&lt;!--mce:0--&gt;&lt;/style&gt;&quot;&#xD;&#xA;&#xD;&#xA;#********************************************************************************&#xD;&#xA;# Creating PSSession and Loading Snapin(make sure your account has rights to sharepoint)&#xD;&#xA;&#xD;&#xA;$cred1 = Get-Credential&#xD;&#xA;&#xD;&#xA;$s1 = New-PSSession -ComputerName Server1 -Authentication CredSSP -Credential $cred1&#xD;&#xA;$s2 = New-PSSession -ComputerName Server2 -Authentication CredSSP -Credential $cred1&#xD;&#xA;$s3 = New-PSSession -ComputerName Server3 -Authentication CredSSP -Credential $cred1&#xD;&#xA;$s4 = New-PSSession -ComputerName server4 -Authentication CredSSP -Credential $cred1&#xD;&#xA;&#xD;&#xA;Function ContentReport ($session){&#xD;&#xA;&#xD;&#xA;Invoke-Command -Session $session -ScriptBlock {Add-PSSnapin Microsoft.SharePoint.PowerShell}&#xD;&#xA;&#xD;&#xA;$f1 = Invoke-Command -Session $session -ScriptBlock {Get-SPWebApplication | Get-SPContentDatabase}&#xD;&#xA;$g1 = $f1 | Select-Object DisplayName,WebApplication,CurrentSiteCount,disksizerequired,WarningSiteCount,MaximumSiteCount | &#xD;&#xA;      ConvertTo-Html -Fragment DisplayName,WebApplication,WarningSiteCount,MaximumSiteCount,@{L='DiskSizeRequired';E={&#xD;&#xA;                                          if($_.disksizerequired -gt 100Gb){&#xD;&#xA;                                               &quot;#font&quot;+$_.disksizerequired+&quot;font#&quot;&#xD;&#xA;                                          }elseif($_.disksizerequired -ge 80Gb){&#xD;&#xA;                                                &quot;#blue&quot;+$_.disksizerequired+&quot;blue#&quot;}&#xD;&#xA;                                          else{&#xD;&#xA;                                               $_.disksizerequired&#xD;&#xA;                                          }&#xD;&#xA;                                       }&#xD;&#xA;                                 },@{L='CurrentSiteCount';E={&#xD;&#xA;                                 if($_.CurrentSiteCount -ge $_.WarningSiteCount){ &#xD;&#xA;                                 &quot;#blue&quot;+$_.CurrentSiteCount+&quot;blue#&quot;&#xD;&#xA;                                 }else{&#xD;&#xA;                                               $_.CurrentSiteCount&#xD;&#xA;                                          }&#xD;&#xA;                                          }&#xD;&#xA;                                          }                            &#xD;&#xA;$g1 = $g1 -replace (&quot;#font&quot;,'&lt;span style=&quot;color:black; background-color:red&quot; &gt;')&#xD;&#xA;$g1 = $g1 -replace &quot;font#&quot;,&quot;&lt;/span&gt;&quot;&#xD;&#xA;$g1 = $g1 -replace ('#blue','&lt;span style=&quot;color:black; background-color:orange&quot;&gt; ')&#xD;&#xA;$g1 = $g1 -replace &quot;blue#&quot;,&quot;&lt;/span&gt;&quot;&#xD;&#xA;&#xD;&#xA;return $g1&#xD;&#xA;}&#xD;&#xA;###############call function for diffrent farms###################################################&#xD;&#xA;&#xD;&#xA;$h1 = ContentReport $s1&#xD;&#xA;$h2 = ContentReport $s2&#xD;&#xA;$h3 = ContentReport $s3&#xD;&#xA;$h4 = ContentReport $s4&#xD;&#xA;&#xD;&#xA;##############################Convert to HTML ####################################################&#xD;&#xA;&#xD;&#xA;ConvertTo-HTML -head $b -Body &quot;&lt;h1&gt;$(Get-Date) Sharepoint Farm Database Content DB Report&lt;/h1&gt; &lt;br /&gt; &#xD;&#xA;&lt;h2&gt;SharePoint_ParentFarm $h1 SharePoint_IntranetFarm  $h2 SharePoint_GalwayFarm  $h3 SharePoint_TokyoFarm  $h4&lt;/h2&gt;&quot; | &#xD;&#xA;Out-File $TXTFile&#xD;&#xA;&#xD;&#xA;# Code to Send Mail &#xD;&#xA;Send-MailMessage -SmtpServer $SMTPServer -From $emailFrom -To $emailTo -Subject $subject -Body $emailBody -Attachment $TXTFile&#xD;&#xA;&#xD;&#xA;if ($error -ne $null)&#xD;&#xA;      {&#xD;&#xA;#SMTP Relay address&#xD;&#xA;$msg = new-object Net.Mail.MailMessage&#xD;&#xA;$smtp = new-object Net.Mail.SmtpClient($smtpServer)&#xD;&#xA;&#xD;&#xA;#Mail sender&#xD;&#xA;$msg.From = $emailFrom&#xD;&#xA;#mail recipient&#xD;&#xA;$msg.To.Add($emailTo)&#xD;&#xA;#$msg.To.Add($email2)&#xD;&#xA;$msg.Subject = &quot;Sharepoint Content DB Script error&quot;&#xD;&#xA;$msg.Body = $error&#xD;&#xA;$smtp.Send($msg)&#xD;&#xA;$error.clear()&#xD;&#xA;       }&#xD;&#xA;  else&#xD;&#xA;&#xD;&#xA;      {&#xD;&#xA;    Write-host &quot;no errors till now&quot;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;Stop-Transcript&#xD;&#xA;#*************************************************************************************************&#xD;&#xA;" />
</CodeSnippets>