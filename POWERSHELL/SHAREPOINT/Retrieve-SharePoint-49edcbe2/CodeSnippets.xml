<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="#Begin Setting Script Variables&#xD;&#xA;&#xD;&#xA;$AccountToRetrieve = &quot;Domain\User&quot;&#xD;&#xA;&#xD;&#xA;#Create Functions&#xD;&#xA;&#xD;&#xA;Function VerifyTimerJob ($Filter)&#xD;&#xA;{&#xD;&#xA;$Timer = Get-SPTimerJob | ? {$_.displayname -like $Filter}&#xD;&#xA;If ($Timer)&#xD;&#xA;{&#xD;&#xA;$timer.Delete()&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#Begin Script&#xD;&#xA;&#xD;&#xA;$Farm = get-spfarm | select name&#xD;&#xA;&#xD;&#xA;$Configdb = Get-SPDatabase | ? {$_.name -eq $Farm.Name.Tostring()}&#xD;&#xA;&#xD;&#xA;$ManagedAccount = get-SPManagedAccount $AccountToRetrieve&#xD;&#xA;&#xD;&#xA;$WebApplication = new-SPWebApplication -Name &quot;Temp Web Application&quot; -url &quot;http://tempwebapplication&quot; -port 80 -AuthenticationProvider (New-SPAuthenticationProvider) -DatabaseServer $Configdb.server.displayname -DatabaseName TempWebApp_DB -ApplicationPool &quot;Password Retrieval&quot; -ApplicationPoolAccount $ManagedAccount -hostheader &quot;http://tempwebapplication&quot;&#xD;&#xA;&#xD;&#xA;$Password = cmd.exe /c $env:windir\system32\inetsrv\appcmd.exe list apppool &quot;Password Retrieval&quot; /text:ProcessModel.Password&#xD;&#xA;&#xD;&#xA;Write-Host &quot;Password for Account &quot;  $AccountToRetrieve  &quot; is &quot; $Password&#xD;&#xA;&#xD;&#xA;$Filter = &quot;Unprovisioning *&quot; + $Webapplication.Displayname + &quot;*&quot;&#xD;&#xA;&#xD;&#xA;VerifyTimerJob($Filter)&#xD;&#xA;Remove-SPWebApplication $WebApplication -DeleteIISSite -RemoveContentDatabases -Confirm:$False&#xD;&#xA;VerifyTimerJob($Filter)&#xD;&#xA;&#xD;&#xA;$ProvisionJobs = Get-SPTimerJob | ? {$_.displayname -like &quot;provisioning web application*&quot;}&#xD;&#xA;if ($ProvisionJobs)&#xD;&#xA;{&#xD;&#xA;    foreach ($ProvisionJob in $ProvisionJobs)&#xD;&#xA;    {&#xD;&#xA;        $ProvisionJob.Delete()&#xD;&#xA;    }&#xD;&#xA;}" />
  <Code Content="#Begin Setting Script Variables&#xD;&#xA;&#xD;&#xA;$AccountToRetrieve = &quot;Domain\User&quot;&#xD;&#xA;&#xD;&#xA;#Create Functions&#xD;&#xA;&#xD;&#xA;Function VerifyTimerJob ($Filter)&#xD;&#xA;{&#xD;&#xA;$Timer = Get-SPTimerJob | ? {$_.displayname -like $Filter}&#xD;&#xA;If ($Timer)&#xD;&#xA;{&#xD;&#xA;$timer.Delete()&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#Begin Script&#xD;&#xA;&#xD;&#xA;$Farm = get-spfarm | select name&#xD;&#xA;&#xD;&#xA;$Configdb = Get-SPDatabase | ? {$_.name -eq $Farm.Name.Tostring()}&#xD;&#xA;&#xD;&#xA;$ManagedAccount = get-SPManagedAccount $AccountToRetrieve&#xD;&#xA;&#xD;&#xA;$WebApplication = new-SPWebApplication -Name &quot;Temp Web Application&quot; -url &quot;http://tempwebapplication&quot; -port 80 -AuthenticationProvider (New-SPAuthenticationProvider) -DatabaseServer $Configdb.server.displayname -DatabaseName TempWebApp_DB -ApplicationPool &quot;Password Retrieval&quot; -ApplicationPoolAccount $ManagedAccount -hostheader &quot;http://tempwebapplication&quot;&#xD;&#xA;&#xD;&#xA;$Password = cmd.exe /c $env:windir\system32\inetsrv\appcmd.exe list apppool &quot;Password Retrieval&quot; /text:ProcessModel.Password&#xD;&#xA;&#xD;&#xA;Write-Host &quot;Password for Account &quot;  $AccountToRetrieve  &quot; is &quot; $Password&#xD;&#xA;&#xD;&#xA;$Filter = &quot;Unprovisioning *&quot; + $Webapplication.Displayname + &quot;*&quot;&#xD;&#xA;&#xD;&#xA;VerifyTimerJob($Filter)&#xD;&#xA;Remove-SPWebApplication $WebApplication -DeleteIISSite -RemoveContentDatabases -Confirm:$False&#xD;&#xA;VerifyTimerJob($Filter)&#xD;&#xA;&#xD;&#xA;$ProvisionJobs = Get-SPTimerJob | ? {$_.displayname -like &quot;provisioning web application*&quot;}&#xD;&#xA;if ($ProvisionJobs)&#xD;&#xA;{&#xD;&#xA;    foreach ($ProvisionJob in $ProvisionJobs)&#xD;&#xA;    {&#xD;&#xA;        $ProvisionJob.Delete()&#xD;&#xA;    }&#xD;&#xA;}" />
</CodeSnippets>