<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="#####################################################################################################################################&#xD;&#xA;# Filename: New-SPEnterpriseSearchIndexComponent.ps1&#xD;&#xA;# Version : 1.0&#xD;&#xA;# Description : This script creates new search index partition on another/same server in existing enteprise search topology. This &#xD;&#xA;#               script assumes that all running crawls have been stopped already, as precautionary step. &#xD;&#xA;# Written by  : Mohit Goyal&#xD;&#xA;#####################################################################################################################################&#xD;&#xA;&#xD;&#xA;#load SharePoint Snap-in&#xD;&#xA;Add-PSSnapin Microsoft.SharePoint.PowerShell&#xD;&#xA;&#xD;&#xA;#Mention server name where existing index component exists&#xD;&#xA;$FromServer = &quot;CON-SPAPPVDEV-01&quot;&#xD;&#xA;#Mention server name on which you need to create an additional index component&#xD;&#xA;$Server = &quot;CON-SPAPPVDEV-02&quot;&#xD;&#xA;#Mention directory location for storing search index data for new component&#xD;&#xA;$Directory = &quot;E:\SearchIndex&quot;&#xD;&#xA;&#xD;&#xA;Try{&#xD;&#xA;    Start-SPAssignment -Global&#xD;&#xA;&#xD;&#xA;    #Gets the existing search service application&#xD;&#xA;    Write-Output &quot;Fetching search service application...&quot;&#xD;&#xA;    $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;    if(!$?)&#xD;&#xA;    {&#xD;&#xA;        throw &quot;Unable to fetch search service application. Pls make sure its up and running fine&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Gets the Search Service Instance on the specified Server&#xD;&#xA;    Write-Output &quot;Fetching search service instance on server $Server...&quot;&#xD;&#xA;    $Instance = Get-SPEnterpriseSearchServiceInstance -Identity $Server&#xD;&#xA;    if(!$?){&#xD;&#xA;        throw &quot;Unable to fetch search service instance on the server $Server&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Starts Search Service Instance on the specified server.&#xD;&#xA;    if($Instance.Status -ne &quot;Online&quot;){&#xD;&#xA;        Write-Output &quot;Starting service instance...&quot;   &#xD;&#xA;        Start-SPEnterpriseSearchServiceInstance $Instance&#xD;&#xA;        Write-Output &quot;Waiting for 60 seconds for instance to come online...&quot;&#xD;&#xA;        sleep 60&#xD;&#xA;        for ($Count=1;$Count -lt 5;$Count++){&#xD;&#xA;            $Instance = Get-SPEnterpriseSearchServiceInstance -Identity $Server&#xD;&#xA;            if($Instance.Status -ne &quot;Online&quot;){&#xD;&#xA;                Write-Output &quot;Waiting for another 60 seconds...&quot;&#xD;&#xA;                sleep 60&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                $Count = 6&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        if($Count -eq 5){&#xD;&#xA;            throw &quot;Failed to start search service instance on server. Pls start manually and run script again&quot;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Clone existing topology&#xD;&#xA;    Write-Output &quot;Fetching active topology and cloning it...&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    $ClonedTopology = New-SPEnterpriseSearchTopology -SearchApplication $SSA -Clone –SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;    #Checks if index directory already exists. If yes, removes it and all sub-directories and files. If not, creates it.&#xD;&#xA;    Remove-Item -Recurse -Force -Path $Directory -ErrorAction SilentlyContinue &#xD;&#xA;    New-Item -ItemType Directory -Path $Directory -Force&#xD;&#xA;&#xD;&#xA;    #Add index component for another server&#xD;&#xA;    Write-Output &quot;Getting existing index component number for specified server...&quot;&#xD;&#xA;    $IndexPartition = Get-SPEnterpriseSearchComponent -SearchTopology $ClonedTopology | Where-Object {$_.servername -eq $FromServer -and $_.name -like &quot;IndexComponent*&quot;} &#xD;&#xA;    $IndexPartitionNo = $IndexPartition.IndexPartitionOrdinal&#xD;&#xA;    $IndexComponentName = $IndexPartition.Name&#xD;&#xA;&#xD;&#xA;    Write-Output &quot;Adding index component number for specified server...&quot;&#xD;&#xA;    New-SPEnterpriseSearchIndexComponent -SearchTopology $ClonedTopology -RootDirectory $Directory -IndexPartition $IndexPartitionNo -SearchServiceInstance $Instance&#xD;&#xA;&#xD;&#xA;    #Pause search service application for repartitioning&#xD;&#xA;    Write-Output &quot;Pausing search service application...&quot;&#xD;&#xA;    $SSA.PauseForIndexRepartitioning() &#xD;&#xA;&#xD;&#xA;    #Sets new search toplogy as active on the server&#xD;&#xA;    Write-Output &quot;Setting new search topology as active. This might take several hours.&quot;&#xD;&#xA;    Set-SPEnterpriseSearchTopology -Identity $ClonedTopology&#xD;&#xA;&#xD;&#xA;    #Monitors progress of index partitioning&#xD;&#xA;    $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;    $Status = Get-SPEnterpriseSearchStatus -SearchApplication $SSA -HealthReport -Component $IndexComponentName | Where-Object { ($_.name -match &quot;repart&quot;) -or ( $_.name -match &quot;splitting&quot;)}&#xD;&#xA;    While($Status -ne $null){&#xD;&#xA;        Write-Output &quot;Waiting for 5 mins for new index partition to be completed...&quot;&#xD;&#xA;        Sleep 300&#xD;&#xA;        $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;        $Status = Get-SPEnterpriseSearchStatus -SearchApplication $SSA -HealthReport -Component $IndexComponentName | Where-Object { ($_.name -match &quot;repart&quot;) -or ( $_.name -match &quot;splitting&quot;)}&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Displays Current topology components to user&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Here are the current search components:&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    Get-SPEnterpriseSearchComponent -SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;    #Resume search service application for repartitioning&#xD;&#xA;    Write-Output &quot;Resuming search service application...&quot;&#xD;&#xA;    $SSA.ResumeAfterIndexRepartitioning()&#xD;&#xA;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Catch{&#xD;&#xA;    Write-Error &quot;Exception Type: $($_.Exception.GetType().FullName)&quot;&#xD;&#xA;    Write-Error &quot;Exception Message: $($_.Exception.Message)&quot;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;finally{&#xD;&#xA;    Stop-SPAssignment -Global&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#########################################################################################################################################&#xD;&#xA;## End of Script&#xD;&#xA;#########################################################################################################################################" />
  <Code Content="#####################################################################################################################################&#xD;&#xA;# Filename: New-SPEnterpriseSearchIndexComponent.ps1&#xD;&#xA;# Version : 1.0&#xD;&#xA;# Description : This script creates new search index partition on another/same server in existing enteprise search topology. This &#xD;&#xA;#               script assumes that all running crawls have been stopped already, as precautionary step. &#xD;&#xA;# Written by  : Mohit Goyal&#xD;&#xA;#####################################################################################################################################&#xD;&#xA;&#xD;&#xA;#load SharePoint Snap-in&#xD;&#xA;Add-PSSnapin Microsoft.SharePoint.PowerShell&#xD;&#xA;&#xD;&#xA;#Mention server name where existing index component exists&#xD;&#xA;$FromServer = &quot;CON-SPAPPVDEV-01&quot;&#xD;&#xA;#Mention server name on which you need to create an additional index component&#xD;&#xA;$Server = &quot;CON-SPAPPVDEV-02&quot;&#xD;&#xA;#Mention directory location for storing search index data for new component&#xD;&#xA;$Directory = &quot;E:\SearchIndex&quot;&#xD;&#xA;&#xD;&#xA;Try{&#xD;&#xA;    Start-SPAssignment -Global&#xD;&#xA;&#xD;&#xA;    #Gets the existing search service application&#xD;&#xA;    Write-Output &quot;Fetching search service application...&quot;&#xD;&#xA;    $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;    if(!$?)&#xD;&#xA;    {&#xD;&#xA;        throw &quot;Unable to fetch search service application. Pls make sure its up and running fine&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Gets the Search Service Instance on the specified Server&#xD;&#xA;    Write-Output &quot;Fetching search service instance on server $Server...&quot;&#xD;&#xA;    $Instance = Get-SPEnterpriseSearchServiceInstance -Identity $Server&#xD;&#xA;    if(!$?){&#xD;&#xA;        throw &quot;Unable to fetch search service instance on the server $Server&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Starts Search Service Instance on the specified server.&#xD;&#xA;    if($Instance.Status -ne &quot;Online&quot;){&#xD;&#xA;        Write-Output &quot;Starting service instance...&quot;   &#xD;&#xA;        Start-SPEnterpriseSearchServiceInstance $Instance&#xD;&#xA;        Write-Output &quot;Waiting for 60 seconds for instance to come online...&quot;&#xD;&#xA;        sleep 60&#xD;&#xA;        for ($Count=1;$Count -lt 5;$Count++){&#xD;&#xA;            $Instance = Get-SPEnterpriseSearchServiceInstance -Identity $Server&#xD;&#xA;            if($Instance.Status -ne &quot;Online&quot;){&#xD;&#xA;                Write-Output &quot;Waiting for another 60 seconds...&quot;&#xD;&#xA;                sleep 60&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                $Count = 6&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        if($Count -eq 5){&#xD;&#xA;            throw &quot;Failed to start search service instance on server. Pls start manually and run script again&quot;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Clone existing topology&#xD;&#xA;    Write-Output &quot;Fetching active topology and cloning it...&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    $ClonedTopology = New-SPEnterpriseSearchTopology -SearchApplication $SSA -Clone –SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;    #Checks if index directory already exists. If yes, removes it and all sub-directories and files. If not, creates it.&#xD;&#xA;    Remove-Item -Recurse -Force -Path $Directory -ErrorAction SilentlyContinue &#xD;&#xA;    New-Item -ItemType Directory -Path $Directory -Force&#xD;&#xA;&#xD;&#xA;    #Add index component for another server&#xD;&#xA;    Write-Output &quot;Getting existing index component number for specified server...&quot;&#xD;&#xA;    $IndexPartition = Get-SPEnterpriseSearchComponent -SearchTopology $ClonedTopology | Where-Object {$_.servername -eq $FromServer -and $_.name -like &quot;IndexComponent*&quot;} &#xD;&#xA;    $IndexPartitionNo = $IndexPartition.IndexPartitionOrdinal&#xD;&#xA;    $IndexComponentName = $IndexPartition.Name&#xD;&#xA;&#xD;&#xA;    Write-Output &quot;Adding index component number for specified server...&quot;&#xD;&#xA;    New-SPEnterpriseSearchIndexComponent -SearchTopology $ClonedTopology -RootDirectory $Directory -IndexPartition $IndexPartitionNo -SearchServiceInstance $Instance&#xD;&#xA;&#xD;&#xA;    #Pause search service application for repartitioning&#xD;&#xA;    Write-Output &quot;Pausing search service application...&quot;&#xD;&#xA;    $SSA.PauseForIndexRepartitioning() &#xD;&#xA;&#xD;&#xA;    #Sets new search toplogy as active on the server&#xD;&#xA;    Write-Output &quot;Setting new search topology as active. This might take several hours.&quot;&#xD;&#xA;    Set-SPEnterpriseSearchTopology -Identity $ClonedTopology&#xD;&#xA;&#xD;&#xA;    #Monitors progress of index partitioning&#xD;&#xA;    $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;    $Status = Get-SPEnterpriseSearchStatus -SearchApplication $SSA -HealthReport -Component $IndexComponentName | Where-Object { ($_.name -match &quot;repart&quot;) -or ( $_.name -match &quot;splitting&quot;)}&#xD;&#xA;    While($Status -ne $null){&#xD;&#xA;        Write-Output &quot;Waiting for 5 mins for new index partition to be completed...&quot;&#xD;&#xA;        Sleep 300&#xD;&#xA;        $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;        $Status = Get-SPEnterpriseSearchStatus -SearchApplication $SSA -HealthReport -Component $IndexComponentName | Where-Object { ($_.name -match &quot;repart&quot;) -or ( $_.name -match &quot;splitting&quot;)}&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Displays Current topology components to user&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Here are the current search components:&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    Get-SPEnterpriseSearchComponent -SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;    #Resume search service application for repartitioning&#xD;&#xA;    Write-Output &quot;Resuming search service application...&quot;&#xD;&#xA;    $SSA.ResumeAfterIndexRepartitioning()&#xD;&#xA;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Catch{&#xD;&#xA;    Write-Error &quot;Exception Type: $($_.Exception.GetType().FullName)&quot;&#xD;&#xA;    Write-Error &quot;Exception Message: $($_.Exception.Message)&quot;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;finally{&#xD;&#xA;    Stop-SPAssignment -Global&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#########################################################################################################################################&#xD;&#xA;## End of Script&#xD;&#xA;#########################################################################################################################################" />
</CodeSnippets>