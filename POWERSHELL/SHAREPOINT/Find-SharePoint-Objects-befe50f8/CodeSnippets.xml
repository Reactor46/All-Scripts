<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="function Find-SPNullDefaultView{&#xD;&#xA;&lt;#&#xD;&#xA;&#x9;.SYNOPSIS&#xD;&#xA;&#x9;&#x9;Displays all SharePoint Objects without a DefaultView defined.&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;.DESCRIPTION&#xD;&#xA;&#x9;&#x9;Useful for identifying objects where the Default View has been deleted, or objects &#xD;&#xA;        created through migration tools that failed to create all aspects of the SPList &#xD;&#xA;        object.  Returns the following SPList Object attributes:&#xD;&#xA;        Title&#xD;&#xA;        ItemCount&#xD;&#xA;        Author&#xD;&#xA;        LastItemModifiedDate&#xD;&#xA;        ParentWebUrl&#xD;&#xA;        BaseType&#xD;&#xA;        RootFolder&#xD;&#xA;        Hidden&#xD;&#xA;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;.EXAMPLE&#xD;&#xA;        Find-SPNullDefaultView &lt;url&gt;&#xD;&#xA;        Find-SPNullDefaultView -url &quot;http://site/subsite&quot;&#xD;&#xA;        Find-SPNullDefaultView &lt;url&gt; | Format-Table Title, BaseType, Hidden, ItemCount, Author, LastItemModifiedDate, ParentWebUrl, RootFolder -AutoSize&#xD;&#xA;        Find-SPNullDefaultView &lt;url&gt; | Select-Object Title, BaseType, Hidden, ItemCount, Author, LastItemModifiedDate, ParentWebUrl, RootFolder | Out-GridView&#xD;&#xA;        &#xD;&#xA;&#xD;&#xA;    .REQUIREMENTS&#xD;&#xA;        Microsoft.SharePoint Assembly Class&#xD;&#xA;        http://msdn.microsoft.com/en-us/library/microsoft.sharepoint.aspx&#xD;&#xA;&#xD;&#xA;    .NOTES&#xD;&#xA;        NAME: Find-SPNullDefaultView&#xD;&#xA;        AUTHOR: Marc Carter&#xD;&#xA;        LASTEDIT: 16-Sep-2013&#xD;&#xA;        KEYWORDS: Windows SharePoint Services 3, MOSS, MOSS 2007, WSS3&#xD;&#xA;        &#xD;&#xA;        SPList.Hidden property: Hidden SPList Objects: http://msdn.microsoft.com/en-us/library/microsoft.sharepoint.splist.hidden.aspx&#xD;&#xA;        Can easily be modified to produce other results by modifying search query 'If($List.DefaultView -eq $null)'&#xD;&#xA;&#xD;&#xA;#&gt;&#xD;&#xA;    [cmdletbinding()]&#x9;    &#xD;&#xA;    param(&#xD;&#xA;        [parameter(ValueFromPipeline=$True,ValueFromPipelineByPropertyName=$True,Mandatory=$True)]&#xD;&#xA;        [string[]]$url&#xD;&#xA;    )&#xD;&#xA;    Begin{&#xD;&#xA;        $const_verbosepreference = $verbosepreference&#xD;&#xA;        $verbosepreference = &quot;Continue&quot;&#xD;&#xA;        # Attempt to load SharePoint Assembly Class before proceeding&#xD;&#xA;        Try { [void] [System.Reflection.Assembly]::LoadWithPartialName(&quot;Microsoft.SharePoint&quot;) } &#xD;&#xA;        Catch { &#xD;&#xA;            Write-Warning &quot;Failed to Load REQUIRED .NET Framework Assembly Class...exiting script!&quot;&#xD;&#xA;            Write-Warning &quot;http://msdn.microsoft.com/en-us/library/hh537936(v=office.14).aspx&quot;&#xD;&#xA;            Break &#xD;&#xA;        }&#xD;&#xA;        $array = @()&#xD;&#xA;    }&#xD;&#xA;    Process{&#xD;&#xA;        Try{&#xD;&#xA;            $SiteCollection = New-Object Microsoft.SharePoint.SPSite($url)&#xD;&#xA;            Foreach($Site in $SiteCollection.AllWebs){ &#xD;&#xA;                Write-Verbose &quot;$($Site.Url)&quot;&#xD;&#xA;                Foreach ($List in $Site.Lists){ &#xD;&#xA;                    Try{ &#xD;&#xA;                        If($List.DefaultView -eq $null){ &#xD;&#xA;                            $props = @{&#xD;&#xA;                                Title=$($List.Title)&#xD;&#xA;                                ItemCount=$($List.ItemCount)&#xD;&#xA;                                Author=$($List.Author)&#xD;&#xA;                                LastItemModifiedDate=$($List.LastItemModifiedDate)&#xD;&#xA;                                ParentWebUrl=$($List.ParentWebUrl)&#xD;&#xA;                                BaseType=$($List.BaseType)&#xD;&#xA;                                RootFolder=$($List.RootFolder) &#xD;&#xA;                                Hidden=$($List.Hidden) &#xD;&#xA;                            }&#xD;&#xA;                            $array += New-Object PSObject -property $props&#xD;&#xA;                        } &#xD;&#xA;                    } Catch { Write-Verbose &quot;Unable to load $List.DefaultViewUrl&quot; } &#xD;&#xA;                } &#xD;&#xA;            } &#xD;&#xA;            $SiteCollection.Dispose(); &#xD;&#xA;        } Catch { Write-Verbose &quot;Unable to locate site for $($url)&quot; }&#xD;&#xA;    }&#xD;&#xA;    End{&#xD;&#xA;        $array&#xD;&#xA;        $verbosepreference = $const_verbosepreference &#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;" />
  <Code Content="function Find-SPNullDefaultView{&#xD;&#xA;&lt;#&#xD;&#xA;&#x9;.SYNOPSIS&#xD;&#xA;&#x9;&#x9;Displays all SharePoint Objects without a DefaultView defined.&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;.DESCRIPTION&#xD;&#xA;&#x9;&#x9;Useful for identifying objects where the Default View has been deleted, or objects &#xD;&#xA;        created through migration tools that failed to create all aspects of the SPList &#xD;&#xA;        object.  Returns the following SPList Object attributes:&#xD;&#xA;        Title&#xD;&#xA;        ItemCount&#xD;&#xA;        Author&#xD;&#xA;        LastItemModifiedDate&#xD;&#xA;        ParentWebUrl&#xD;&#xA;        BaseType&#xD;&#xA;        RootFolder&#xD;&#xA;        Hidden&#xD;&#xA;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;.EXAMPLE&#xD;&#xA;        Find-SPNullDefaultView &lt;url&gt;&#xD;&#xA;        Find-SPNullDefaultView -url &quot;http://site/subsite&quot;&#xD;&#xA;        Find-SPNullDefaultView &lt;url&gt; | Format-Table Title, BaseType, Hidden, ItemCount, Author, LastItemModifiedDate, ParentWebUrl, RootFolder -AutoSize&#xD;&#xA;        Find-SPNullDefaultView &lt;url&gt; | Select-Object Title, BaseType, Hidden, ItemCount, Author, LastItemModifiedDate, ParentWebUrl, RootFolder | Out-GridView&#xD;&#xA;        &#xD;&#xA;&#xD;&#xA;    .REQUIREMENTS&#xD;&#xA;        Microsoft.SharePoint Assembly Class&#xD;&#xA;        http://msdn.microsoft.com/en-us/library/microsoft.sharepoint.aspx&#xD;&#xA;&#xD;&#xA;    .NOTES&#xD;&#xA;        NAME: Find-SPNullDefaultView&#xD;&#xA;        AUTHOR: Marc Carter&#xD;&#xA;        LASTEDIT: 16-Sep-2013&#xD;&#xA;        KEYWORDS: Windows SharePoint Services 3, MOSS, MOSS 2007, WSS3&#xD;&#xA;        &#xD;&#xA;        SPList.Hidden property: Hidden SPList Objects: http://msdn.microsoft.com/en-us/library/microsoft.sharepoint.splist.hidden.aspx&#xD;&#xA;        Can easily be modified to produce other results by modifying search query 'If($List.DefaultView -eq $null)'&#xD;&#xA;&#xD;&#xA;#&gt;&#xD;&#xA;    [cmdletbinding()]&#x9;    &#xD;&#xA;    param(&#xD;&#xA;        [parameter(ValueFromPipeline=$True,ValueFromPipelineByPropertyName=$True,Mandatory=$True)]&#xD;&#xA;        [string[]]$url&#xD;&#xA;    )&#xD;&#xA;    Begin{&#xD;&#xA;        $const_verbosepreference = $verbosepreference&#xD;&#xA;        $verbosepreference = &quot;Continue&quot;&#xD;&#xA;        # Attempt to load SharePoint Assembly Class before proceeding&#xD;&#xA;        Try { [void] [System.Reflection.Assembly]::LoadWithPartialName(&quot;Microsoft.SharePoint&quot;) } &#xD;&#xA;        Catch { &#xD;&#xA;            Write-Warning &quot;Failed to Load REQUIRED .NET Framework Assembly Class...exiting script!&quot;&#xD;&#xA;            Write-Warning &quot;http://msdn.microsoft.com/en-us/library/hh537936(v=office.14).aspx&quot;&#xD;&#xA;            Break &#xD;&#xA;        }&#xD;&#xA;        $array = @()&#xD;&#xA;    }&#xD;&#xA;    Process{&#xD;&#xA;        Try{&#xD;&#xA;            $SiteCollection = New-Object Microsoft.SharePoint.SPSite($url)&#xD;&#xA;            Foreach($Site in $SiteCollection.AllWebs){ &#xD;&#xA;                Write-Verbose &quot;$($Site.Url)&quot;&#xD;&#xA;                Foreach ($List in $Site.Lists){ &#xD;&#xA;                    Try{ &#xD;&#xA;                        If($List.DefaultView -eq $null){ &#xD;&#xA;                            $props = @{&#xD;&#xA;                                Title=$($List.Title)&#xD;&#xA;                                ItemCount=$($List.ItemCount)&#xD;&#xA;                                Author=$($List.Author)&#xD;&#xA;                                LastItemModifiedDate=$($List.LastItemModifiedDate)&#xD;&#xA;                                ParentWebUrl=$($List.ParentWebUrl)&#xD;&#xA;                                BaseType=$($List.BaseType)&#xD;&#xA;                                RootFolder=$($List.RootFolder) &#xD;&#xA;                                Hidden=$($List.Hidden) &#xD;&#xA;                            }&#xD;&#xA;                            $array += New-Object PSObject -property $props&#xD;&#xA;                        } &#xD;&#xA;                    } Catch { Write-Verbose &quot;Unable to load $List.DefaultViewUrl&quot; } &#xD;&#xA;                } &#xD;&#xA;            } &#xD;&#xA;            $SiteCollection.Dispose(); &#xD;&#xA;        } Catch { Write-Verbose &quot;Unable to locate site for $($url)&quot; }&#xD;&#xA;    }&#xD;&#xA;    End{&#xD;&#xA;        $array&#xD;&#xA;        $verbosepreference = $const_verbosepreference &#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;" />
</CodeSnippets>