<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="#####################################################################################################################################&#xD;&#xA;# Filename: Remove-SPEnterpriseSearchCrawlComponent.ps1&#xD;&#xA;# Version : 1.0&#xD;&#xA;# Description : This script removes existing crawl component on a server in existing enteprise search topology. This &#xD;&#xA;#               script assumes that all running crawls have been stopped already, as precautionary step. &#xD;&#xA;# Written by  : Mohit Goyal&#xD;&#xA;#####################################################################################################################################&#xD;&#xA;&#xD;&#xA;#load SharePoint Snap-in&#xD;&#xA;Add-PSSnapin Microsoft.SharePoint.PowerShell&#xD;&#xA;&#xD;&#xA;#Mention server name from which you need to remove query processing component&#xD;&#xA;$Server = &quot;con-spappdev-02&quot;&#xD;&#xA;&#xD;&#xA;Try{&#xD;&#xA;&#xD;&#xA;    #Gets the existing search service application&#xD;&#xA;    Write-Output &quot;Fetching search service application...&quot;&#xD;&#xA;    $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;    if(!$?)&#xD;&#xA;    {&#xD;&#xA;        throw &quot;Unable to fetch search service application. Pls make sure its up and running fine&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Clone existing topology&#xD;&#xA;    Write-Output &quot;Fetching active topology and cloning it...&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    $ClonedTopology = New-SPEnterpriseSearchTopology -SearchApplication $SSA -Clone –SearchTopology $ActiveToplogy&#xD;&#xA;    if(!$?){&#xD;&#xA;        throw &quot;Unable to clone existing search topology.&quot;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #Removes crawl component from specified server &#xD;&#xA;    Write-Output &quot;Removing crawl component from specified server...&quot;&#xD;&#xA;    $Components = Get-SPEnterpriseSearchComponent -SearchTopology $ClonedTopology | Where-Object {$_.Name -like &quot;crawlcomponent*&quot; -and $_.Servername -eq $Server}&#xD;&#xA;    $Components | Remove-SPEnterpriseSearchComponent -SearchTopology $ClonedTopology -Confirm:$false&#xD;&#xA;    &#xD;&#xA;    #Sets cloned topology as active&#xD;&#xA;    Write-Output &quot;Setting new search topology as active...&quot;&#xD;&#xA;    Set-SPEnterpriseSearchTopology -Identity $ClonedTopology&#xD;&#xA;&#xD;&#xA;    #Displays Current topology components to user&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Here are the current search components:&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    Get-SPEnterpriseSearchComponent -SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Catch{&#xD;&#xA;    Write-Error &quot;Exception Type: $($_.Exception.GetType().FullName)&quot;&#xD;&#xA;    Write-Error &quot;Exception Message: $($_.Exception.Message)&quot;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#########################################################################################################################################&#xD;&#xA;## End of Script&#xD;&#xA;#########################################################################################################################################" />
  <Code Content="#####################################################################################################################################&#xD;&#xA;# Filename: Remove-SPEnterpriseSearchCrawlComponent2.ps1&#xD;&#xA;# Version : 1.0&#xD;&#xA;# Description : This script removes existing crawl component on a server in existing enteprise search topology. This &#xD;&#xA;#               script assumes that all running crawls have been stopped already, as precautionary step. &#xD;&#xA;# Written by  : Mohit Goyal&#xD;&#xA;#####################################################################################################################################&#xD;&#xA;&#xD;&#xA;[CmdletBinding()]&#xD;&#xA;Param(&#xD;&#xA;    [parameter(Mandatory=$true, ValueFromPipeline=$true)]&#xD;&#xA;    [alias(&quot;ServerName&quot;,&quot;MachineName&quot;,&quot;Name&quot;)]&#xD;&#xA;    [ValidateNotNullOrEmpty()]&#xD;&#xA;    [String]&#xD;&#xA;    $ComputerName&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Function Remove-SPSearchCrawlComponent([string] $Server)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;    Try{&#xD;&#xA;        #Load SharePoint Snap-in&#xD;&#xA;        Add-PSSnapin Microsoft.SharePoint.PowerShell&#xD;&#xA;&#xD;&#xA;        #Gets the existing search service application&#xD;&#xA;        Write-Output &quot;Fetching search service application...&quot;&#xD;&#xA;        $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;        if(!$?)&#xD;&#xA;        {&#xD;&#xA;            throw &quot;Unable to fetch search service application. Pls make sure its up and running fine&quot;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #Clone existing topology&#xD;&#xA;        Write-Output &quot;Fetching active topology and cloning it...&quot;&#xD;&#xA;        $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;        $ClonedTopology = New-SPEnterpriseSearchTopology -SearchApplication $SSA -Clone –SearchTopology $ActiveToplogy&#xD;&#xA;        if(!$?){&#xD;&#xA;            throw &quot;Unable to clone existing search topology.&quot;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        #Removes crawl component from specified server &#xD;&#xA;        Write-Output &quot;Removing crawl component from specified server...&quot;&#xD;&#xA;        $Components = Get-SPEnterpriseSearchComponent -SearchTopology $ClonedTopology | Where-Object {$_.Name -like &quot;crawlcomponent*&quot; -and $_.Servername -eq $Server}&#xD;&#xA;        $Components | Remove-SPEnterpriseSearchComponent -SearchTopology $ClonedTopology -Confirm:$false&#xD;&#xA;    &#xD;&#xA;        #Sets cloned topology as active&#xD;&#xA;        Write-Output &quot;Setting new search topology as active...&quot;&#xD;&#xA;        Set-SPEnterpriseSearchTopology -Identity $ClonedTopology&#xD;&#xA;&#xD;&#xA;        #Displays Current topology components to user&#xD;&#xA;        Write-Output &quot;&quot;&#xD;&#xA;        Write-Output &quot;Here are the current search components:&quot;&#xD;&#xA;        $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;        Get-SPEnterpriseSearchComponent -SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;        Write-Output &quot;&quot;&#xD;&#xA;        Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    Catch{&#xD;&#xA;        Write-Error &quot;Exception Type: $($_.Exception.GetType().FullName)&quot;&#xD;&#xA;        Write-Error &quot;Exception Message: $($_.Exception.Message)&quot;&#xD;&#xA;        Write-Output &quot;&quot;&#xD;&#xA;        Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#Main Block Starts here&#xD;&#xA;Remove-SPSearchCrawlComponent $ComputerName&#xD;&#xA;&#xD;&#xA;#########################################################################################################################################&#xD;&#xA;## End of Script&#xD;&#xA;#########################################################################################################################################" />
  <Code Content=".\Remove-SPEnterpriseSearchCrawlComponent2.ps1 -ComputerName con-spappdev-02&#xD;&#xA;or&#xD;&#xA;Something to get server name | .\Remove-SPEnterpriseSearchCrawlComponent2.ps1" />
  <Code Content="#####################################################################################################################################&#xD;&#xA;# Filename: Remove-SPEnterpriseSearchCrawlComponent.ps1&#xD;&#xA;# Version : 1.0&#xD;&#xA;# Description : This script removes existing crawl component on a server in existing enteprise search topology. This &#xD;&#xA;#               script assumes that all running crawls have been stopped already, as precautionary step. &#xD;&#xA;# Written by  : Mohit Goyal&#xD;&#xA;#####################################################################################################################################&#xD;&#xA;&#xD;&#xA;#load SharePoint Snap-in&#xD;&#xA;Add-PSSnapin Microsoft.SharePoint.PowerShell&#xD;&#xA;&#xD;&#xA;#Mention server name from which you need to remove query processing component&#xD;&#xA;$Server = &quot;con-spappdev-02&quot;&#xD;&#xA;&#xD;&#xA;Try{&#xD;&#xA;&#xD;&#xA;    #Gets the existing search service application&#xD;&#xA;    Write-Output &quot;Fetching search service application...&quot;&#xD;&#xA;    $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;    if(!$?)&#xD;&#xA;    {&#xD;&#xA;        throw &quot;Unable to fetch search service application. Pls make sure its up and running fine&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Clone existing topology&#xD;&#xA;    Write-Output &quot;Fetching active topology and cloning it...&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    $ClonedTopology = New-SPEnterpriseSearchTopology -SearchApplication $SSA -Clone –SearchTopology $ActiveToplogy&#xD;&#xA;    if(!$?){&#xD;&#xA;        throw &quot;Unable to clone existing search topology.&quot;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #Removes crawl component from specified server &#xD;&#xA;    Write-Output &quot;Removing crawl component from specified server...&quot;&#xD;&#xA;    $Components = Get-SPEnterpriseSearchComponent -SearchTopology $ClonedTopology | Where-Object {$_.Name -like &quot;crawlcomponent*&quot; -and $_.Servername -eq $Server}&#xD;&#xA;    $Components | Remove-SPEnterpriseSearchComponent -SearchTopology $ClonedTopology -Confirm:$false&#xD;&#xA;    &#xD;&#xA;    #Sets cloned topology as active&#xD;&#xA;    Write-Output &quot;Setting new search topology as active...&quot;&#xD;&#xA;    Set-SPEnterpriseSearchTopology -Identity $ClonedTopology&#xD;&#xA;&#xD;&#xA;    #Displays Current topology components to user&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Here are the current search components:&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    Get-SPEnterpriseSearchComponent -SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Catch{&#xD;&#xA;    Write-Error &quot;Exception Type: $($_.Exception.GetType().FullName)&quot;&#xD;&#xA;    Write-Error &quot;Exception Message: $($_.Exception.Message)&quot;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#########################################################################################################################################&#xD;&#xA;## End of Script&#xD;&#xA;#########################################################################################################################################" />
  <Code Content="#####################################################################################################################################&#xD;&#xA;# Filename: Remove-SPEnterpriseSearchCrawlComponent2.ps1&#xD;&#xA;# Version : 1.0&#xD;&#xA;# Description : This script removes existing crawl component on a server in existing enteprise search topology. This &#xD;&#xA;#               script assumes that all running crawls have been stopped already, as precautionary step. &#xD;&#xA;# Written by  : Mohit Goyal&#xD;&#xA;#####################################################################################################################################&#xD;&#xA;&#xD;&#xA;[CmdletBinding()]&#xD;&#xA;Param(&#xD;&#xA;    [parameter(Mandatory=$true, ValueFromPipeline=$true)]&#xD;&#xA;    [alias(&quot;ServerName&quot;,&quot;MachineName&quot;,&quot;Name&quot;)]&#xD;&#xA;    [ValidateNotNullOrEmpty()]&#xD;&#xA;    [String]&#xD;&#xA;    $ComputerName&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Function Remove-SPSearchCrawlComponent([string] $Server)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;    Try{&#xD;&#xA;        #Load SharePoint Snap-in&#xD;&#xA;        Add-PSSnapin Microsoft.SharePoint.PowerShell&#xD;&#xA;&#xD;&#xA;        #Gets the existing search service application&#xD;&#xA;        Write-Output &quot;Fetching search service application...&quot;&#xD;&#xA;        $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;        if(!$?)&#xD;&#xA;        {&#xD;&#xA;            throw &quot;Unable to fetch search service application. Pls make sure its up and running fine&quot;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #Clone existing topology&#xD;&#xA;        Write-Output &quot;Fetching active topology and cloning it...&quot;&#xD;&#xA;        $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;        $ClonedTopology = New-SPEnterpriseSearchTopology -SearchApplication $SSA -Clone –SearchTopology $ActiveToplogy&#xD;&#xA;        if(!$?){&#xD;&#xA;            throw &quot;Unable to clone existing search topology.&quot;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        #Removes crawl component from specified server &#xD;&#xA;        Write-Output &quot;Removing crawl component from specified server...&quot;&#xD;&#xA;        $Components = Get-SPEnterpriseSearchComponent -SearchTopology $ClonedTopology | Where-Object {$_.Name -like &quot;crawlcomponent*&quot; -and $_.Servername -eq $Server}&#xD;&#xA;        $Components | Remove-SPEnterpriseSearchComponent -SearchTopology $ClonedTopology -Confirm:$false&#xD;&#xA;    &#xD;&#xA;        #Sets cloned topology as active&#xD;&#xA;        Write-Output &quot;Setting new search topology as active...&quot;&#xD;&#xA;        Set-SPEnterpriseSearchTopology -Identity $ClonedTopology&#xD;&#xA;&#xD;&#xA;        #Displays Current topology components to user&#xD;&#xA;        Write-Output &quot;&quot;&#xD;&#xA;        Write-Output &quot;Here are the current search components:&quot;&#xD;&#xA;        $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;        Get-SPEnterpriseSearchComponent -SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;        Write-Output &quot;&quot;&#xD;&#xA;        Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    Catch{&#xD;&#xA;        Write-Error &quot;Exception Type: $($_.Exception.GetType().FullName)&quot;&#xD;&#xA;        Write-Error &quot;Exception Message: $($_.Exception.Message)&quot;&#xD;&#xA;        Write-Output &quot;&quot;&#xD;&#xA;        Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#Main Block Starts here&#xD;&#xA;Remove-SPSearchCrawlComponent $ComputerName&#xD;&#xA;&#xD;&#xA;#########################################################################################################################################&#xD;&#xA;## End of Script&#xD;&#xA;#########################################################################################################################################" />
  <Code Content=".\Remove-SPEnterpriseSearchCrawlComponent2.ps1 -ComputerName con-spappdev-02&#xD;&#xA;or&#xD;&#xA;Something to get server name | .\Remove-SPEnterpriseSearchCrawlComponent2.ps1" />
</CodeSnippets>