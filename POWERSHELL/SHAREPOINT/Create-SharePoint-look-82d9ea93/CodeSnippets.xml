<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="# check to ensure Microsoft.SharePoint.PowerShell is loaded&#xD;&#xA;cls;&#xD;&#xA;Write-Host &quot;Loading SharePoint Powershell Snapin&quot; -ForegroundColor Blue&#xD;&#xA;Add-PSSnapin &quot;Microsoft.SharePoint.Powershell&quot; -ErrorAction SilentlyContinue&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Write-Host &quot;Loading SharePoint Assembly&quot; -ForegroundColor Blue&#xD;&#xA;[System.Reflection.Assembly]::LoadWithPartialName(&quot;Microsoft.SharePoint&quot;)&#xD;&#xA;#[System.Reflection.Assembly]::LoadWithPartialName(&quot;System.Xml&quot;)&#xD;&#xA;[System.Reflection.Assembly]::LoadWithPartialName(&quot;Microsoft.SharePoint.WebPartPages&quot;) &#xD;&#xA;#[System.Reflection.Assembly]::LoadWithPartialName(&quot;Microsoft.SharePoint.Publishing&quot;)  &#xD;&#xA;#[Reflection.Assembly]::LoadWithPartialName(&quot;Microsoft.SharePoint.Taxonomy&quot;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function Main-Function ()&#xD;&#xA;{&#xD;&#xA;&#x9;&#x9;CreateDropDownField &quot;CompoundTemp&quot; &quot;CompoundTemp&quot; &quot;Choice&quot; &quot;http://eccoe-sps2010:12345/sites/Azasite/TestSite&quot;  &quot;Team_TeamRoster&quot;     &quot;Dropdown&quot; &quot;ABC&quot; &quot;Compound&quot;;&#x9;&#xD;&#xA;       CreateFieldLookUp &quot;Compound&quot; &quot;Compound&quot; &quot;LookUp&quot; &quot;http://eccoe-sps2010:12345/sites/Azasite/TestSite&quot;  &quot;Team_TeamRoster&quot; &quot;Team_Compound&quot; &quot;Title&quot; &quot;false&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot;; &#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function CreateDropDownField([string] $fieldDisplayName,[string] $fieldInternalName,[string] $fieldDataType, [string] $DestinationSiteUrl,&#xD;&#xA;                     [string] $DestinationListName, [string] $ChoiceClmnDisplayType, [string] $ChoiceClmnItems, [string] $Compound)&#xD;&#xA;{&#xD;&#xA;    # Load Web and List &#xD;&#xA;                try{         &#xD;&#xA;                &#xD;&#xA;                #region Load List and Web&#xD;&#xA;                try{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$dstListWeb = Get-SPWeb -identity $DestinationSiteUrl;              &#xD;&#xA;                                $destinationListUrl = $dstListWeb.ServerRelativeUrl + &quot;/&quot; + $DestinationListName;&#xD;&#xA;                                $DestinationList = $dstListWeb.GetList($destinationListUrl);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;                }&#xD;&#xA;                catch{&#xD;&#xA;                                $dstListWeb = Get-SPWeb -identity $DestinationSiteUrl;              &#xD;&#xA;                                $destinationListUrl = $dstListWeb.ServerRelativeUrl + &quot;/lists/&quot; + $DestinationListName;&#xD;&#xA;                                $DestinationList = $dstListWeb.GetList($destinationListUrl);&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                #endregion&#xD;&#xA;                Write-Host &quot;DestinationList&quot; $DestinationList;&#xD;&#xA;                &#xD;&#xA;&#x9;            #region Create DropDown Choice Field&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;                        &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  $SourceField = $null;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$SourceField = $DestinationList.Fields.GetFieldByInternalName($Compound);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;[int]$hh = 0;&#xD;&#xA;&#x9;                        [int]$SourceFieldChoicesCount = $SourceField.Choices.Count;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if($SourceField -ne $null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try{&#xD;&#xA;&#xD;&#xA;&#x9;                            $ChoceFieldValues = $SourceField.Choices;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;                              for($hh -eq 0; $hh -lt $SourceFieldChoicesCount; $hh++)&#xD;&#xA;&#x9;                              {   &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;                                 $ChoiceClmnItems=$ChoiceClmnItems + $ChoceFieldValues[$hh]+&quot;;&quot;;&#xD;&#xA;&#x9;                              }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;#region function is for generating/appending Log File&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$Message = &quot;$FieldName_Meeting lookup field has been set to $LookupFieldName field&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Write-Host $Message;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$count=$count+1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;#endregion function is for generating/appending Log File&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;catch&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;#region function is for generating/appending Log File&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$Message = &quot;Error : While updating $ListFieldName field's property.&quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Write-Host $Message;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$count=$count+1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;#endregion function is for generating/appending Log File&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;                &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if($fieldDataType -eq &quot;Choice&quot;)&#xD;&#xA;&#x9;                {&#xD;&#xA;&#x9;                #region column of type 'Choice'&#xD;&#xA;&#x9;                &#xD;&#xA;&#x9;                #region Get Choice Items&#xD;&#xA;&#x9;                $ChoiceItems = $ChoiceClmnItems.split(&quot;;&quot;);&#xD;&#xA;&#x9;                $Choices = &quot;&lt;CHOICES&gt;&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;                for ($k=0; $k -le $ChoiceItems.length; $k++)&#xD;&#xA;&#x9;                                {&#xD;&#xA;&#x9;                                $Choices = $Choices + &quot;&lt;CHOICE&gt;&quot;;&#xD;&#xA;&#x9;                                $Choices = $Choices + $ChoiceItems[$k];&#xD;&#xA;&#x9;                                $Choices = $Choices + &quot;&lt;/CHOICE&gt;&quot;;&#xD;&#xA;&#x9;                                }&#xD;&#xA;&#x9;                $Choices = $Choices + &quot;&lt;/CHOICES&gt;&quot;;&#xD;&#xA;&#x9;                &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;                #endregion&#xD;&#xA;&#x9;                &#xD;&#xA;&#x9;                if($ChoiceClmnDisplayType -eq &quot;Dropdown&quot;)&#xD;&#xA;&#x9;                {&#xD;&#xA;&#x9;    &#x9;&#x9;&#x9;&#x9;$ColXml = &quot;&lt;Field Type='Choice' Format='Dropdown' FillInChoice='FALSE' DisplayName='&quot; + $fieldInternalName + &quot;' StaticName='&quot; + $fieldInternalName +&quot;' Name='&quot; + $fieldInternalName + &quot;' &gt;&quot; + $Choices + &quot;&lt;/Field&gt;&quot;;&#xD;&#xA;&#x9;    &#x9;&#x9;&#x9;}     &#xD;&#xA;&#x9;    &#xD;&#xA;&#x9;                $DestinationList.Fields.AddFieldAsXml($ColXml,$true, [Microsoft.SharePoint.SPAddFieldOptions]::AddFieldToDefaultView);&#xD;&#xA;&#x9;                $DestinationList.Update();&#xD;&#xA;&#x9;                #endregion&#xD;&#xA;&#x9;                }&#xD;&#xA;&#xD;&#xA;&#x9;                #endregion&#xD;&#xA;&#x9;                &#xD;&#xA;     &#xD;&#xA;                &#xD;&#xA;                #region function is for generating/appending Log File&#xD;&#xA;                $Message = &quot;Field &quot; + $fieldDisplayName + &quot;Created in destination list &quot; + $DestinationListName +&quot; type &quot;+$fieldDataType;&#xD;&#xA;                #Bellow function is for generating Log File                            &#xD;&#xA;                $count=$count+1;&#xD;&#xA;                Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;                #endregion function is for generating/appending Log File&#xD;&#xA;                &#xD;&#xA;    }&#xD;&#xA;                catch{&#xD;&#xA;                                                &#xD;&#xA;                        #region function is for generating/appending Log File&#xD;&#xA;                        $Message = &quot;Error : in Create DropDown  Field Function is $_ . List named $DestinationListName does not exist on $DestinationSiteUrl&quot;&#xD;&#xA;                        #Bellow function is for generating Log File                            &#xD;&#xA;                        $count=$count+1;&#xD;&#xA;                        Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;                        #endregion function is for generating/appending Log File&#xD;&#xA;                                        &#xD;&#xA;                        Write-Host -ForegroundColor red $Message;&#xD;&#xA;                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;#region CreateField Function&#xD;&#xA;function CreateFieldLookUp([string] $fieldDisplayName,[string] $fieldInternalName,[string] $fieldDataType, [string] $DestinationSiteUrl,&#xD;&#xA;                     [string] $DestinationListName, [string] $LookUpMasterListName, [string] $LookUpMasterListClmnName, [string] $LookUpAllowMultiple, [string] $MultiLineClmnTextType,&#xD;&#xA;                                                                                [string] $ChoiceClmnDisplayType, [string] $ChoiceClmnItems, [string] $CalculatedClmnFormula, [string] $CalculatedClmnDataType,&#xD;&#xA;                                                                                [string] $fieldListView, [string] $UserClmnType)&#xD;&#xA;{     &#xD;&#xA;                try&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{         &#xD;&#xA;                &#xD;&#xA;                #region Load List and Web&#xD;&#xA;                try{&#xD;&#xA;                                $dstListWeb = Get-SPWeb -identity $DestinationSiteUrl;              &#xD;&#xA;                                $destinationListUrl = $dstListWeb.ServerRelativeUrl + &quot;/&quot; + $DestinationListName;&#xD;&#xA;                                $DestinationList = $dstListWeb.GetList($destinationListUrl);&#xD;&#xA;                }&#xD;&#xA;                catch{&#xD;&#xA;                                $dstListWeb = Get-SPWeb -identity $DestinationSiteUrl;              &#xD;&#xA;                                $destinationListUrl = $dstListWeb.ServerRelativeUrl + &quot;/lists/&quot; + $DestinationListName;&#xD;&#xA;                                $DestinationList = $dstListWeb.GetList($destinationListUrl);&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                #endregion&#xD;&#xA;                Write-Host &quot;DestinationList&quot; $DestinationList;&#xD;&#xA;                &#xD;&#xA;    &#x9;&#x9;&#x9;#region Create Field&#xD;&#xA;                &#xD;&#xA; &#xD;&#xA;               if($fieldDataType -eq &quot;Lookup&quot;)&#xD;&#xA;                {&#xD;&#xA;                #region column of type 'Lookup'               &#xD;&#xA;                $lookupListUrl = $dstListWeb.ServerRelativeUrl + &quot;/Lists/&quot; + $LookUpMasterListName;&#xD;&#xA;                $LookupList = $dstListWeb.GetList($lookupListUrl);&#xD;&#xA;                $LookupListID = $LookupList.ID;&#xD;&#xA;                if($LookUpAllowMultiple -eq &quot;true&quot;)&#xD;&#xA;                {&#xD;&#xA;                $ColXml = &quot;&lt;Field Type='Lookup' AllowMultipleValues='true' RelationshipDeleteBehavior='None' DisplayName='&quot; + $fieldInternalName + &quot;' StaticName='&quot; + $fieldInternalName +&quot;' Name='&quot; + $fieldInternalName + &quot;' List='{&quot; + $LookupListID + &quot;}' ShowField='&quot; + $LookUpMasterListClmnName +&quot;' /&gt;&quot;;&#xD;&#xA;    }&#xD;&#xA;                elseif($LookUpAllowMultiple -eq &quot;false&quot;)&#xD;&#xA;                {&#xD;&#xA;                $ColXml = &quot;&lt;Field Type='Lookup' AllowMultipleValues='false' RelationshipDeleteBehavior='None' DisplayName='&quot; + $fieldInternalName + &quot;' StaticName='&quot; + $fieldInternalName +&quot;' Name='&quot; + $fieldInternalName + &quot;' List='{&quot; + $LookupListID + &quot;}' ShowField='&quot; + $LookUpMasterListClmnName +&quot;' /&gt;&quot;;&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                $DestinationList.Fields.AddFieldAsXml($ColXml,$true, [Microsoft.SharePoint.SPAddFieldOptions]::AddFieldToDefaultView);&#xD;&#xA;                $DestinationList.Update();&#xD;&#xA;                #endregion&#xD;&#xA;                }&#xD;&#xA;               &#xD;&#xA;             &#xD;&#xA;                #endregion&#xD;&#xA;                &#xD;&#xA;                               &#xD;&#xA;         &#xD;&#xA;                &#xD;&#xA;                #region function is for generating/appending Log File&#xD;&#xA;                $Message = &quot;Field &quot; + $fieldDisplayName + &quot;Created in destination list &quot; + $DestinationListName +&quot; type &quot;+$fieldDataType;&#xD;&#xA;                #Bellow function is for generating Log File                            &#xD;&#xA;                $count=$count+1;&#xD;&#xA;                Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;                #endregion function is for generating/appending Log File&#xD;&#xA;                &#xD;&#xA;    &#x9;&#x9;&#x9;}&#xD;&#xA;                catch&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                                                &#xD;&#xA;                        #region function is for generating/appending Log File&#xD;&#xA;                        $Message = &quot;Error : in Create Field Function is $_ . List named $DestinationListName does not exist on $DestinationSiteUrl&quot;&#xD;&#xA;                        #Bellow function is for generating Log File                            &#xD;&#xA;                        $count=$count+1;&#xD;&#xA;                        Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;                        #endregion function is for generating/appending Log File&#xD;&#xA;                                        &#xD;&#xA;                        Write-Host -ForegroundColor red $Message;&#xD;&#xA;                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;#region Change the Display Name&#xD;&#xA;                &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;try{&#xD;&#xA;&#x9;                $spField = $DestinationList.Fields.GetFieldByInternalName($fieldInternalName);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if($spField -eq $null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$spField = $DestinationList.Fields[$fieldInternalName];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if($spField -ne $null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;                $spField.Title = $fieldDisplayName;&#xD;&#xA;&#x9;&#x9;                $spField.Update();&#xD;&#xA;&#x9;                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; #region function is for generating/appending Log File&#xD;&#xA;&#x9;&#x9;                 $Message = &quot;Field $fieldDisplayName on $DestinationSiteUrl not found&quot;&#xD;&#xA;&#x9;&#x9;                 #Bellow function is for generating Log File                            &#xD;&#xA;&#x9;&#x9;                 $count=$count+1;&#xD;&#xA;&#x9;&#x9;                 Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;&#x9;&#x9;                 #endregion function is for generating/appending Log File&#xD;&#xA;&#x9;&#x9;                                &#xD;&#xA;&#x9;&#x9;                 Write-Host -ForegroundColor red $Message;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;catch&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;#region function is for generating/appending Log File&#xD;&#xA;&#x9;                $Message = &quot;Error : in Create Field Function while changing Display Name is $_ . Field name  $fieldDisplayName on $DestinationSiteUrl&quot;&#xD;&#xA;&#x9;                #Bellow function is for generating Log File                            &#xD;&#xA;&#x9;                $count=$count+1;&#xD;&#xA;&#x9;                Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;&#x9;                #endregion function is for generating/appending Log File&#xD;&#xA;&#x9;                                &#xD;&#xA;&#x9;                Write-Host -ForegroundColor red $Message;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                #endregion&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#endregion CreateField Function&#xD;&#xA;Main-Function" />
  <Code Content="# check to ensure Microsoft.SharePoint.PowerShell is loaded&#xD;&#xA;cls;&#xD;&#xA;Write-Host &quot;Loading SharePoint Powershell Snapin&quot; -ForegroundColor Blue&#xD;&#xA;Add-PSSnapin &quot;Microsoft.SharePoint.Powershell&quot; -ErrorAction SilentlyContinue&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Write-Host &quot;Loading SharePoint Assembly&quot; -ForegroundColor Blue&#xD;&#xA;[System.Reflection.Assembly]::LoadWithPartialName(&quot;Microsoft.SharePoint&quot;)&#xD;&#xA;#[System.Reflection.Assembly]::LoadWithPartialName(&quot;System.Xml&quot;)&#xD;&#xA;[System.Reflection.Assembly]::LoadWithPartialName(&quot;Microsoft.SharePoint.WebPartPages&quot;) &#xD;&#xA;#[System.Reflection.Assembly]::LoadWithPartialName(&quot;Microsoft.SharePoint.Publishing&quot;)  &#xD;&#xA;#[Reflection.Assembly]::LoadWithPartialName(&quot;Microsoft.SharePoint.Taxonomy&quot;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function Main-Function ()&#xD;&#xA;{&#xD;&#xA;&#x9;&#x9;CreateDropDownField &quot;CompoundTemp&quot; &quot;CompoundTemp&quot; &quot;Choice&quot; &quot;http://eccoe-sps2010:12345/sites/Azasite/TestSite&quot;  &quot;Team_TeamRoster&quot;     &quot;Dropdown&quot; &quot;ABC&quot; &quot;Compound&quot;;&#x9;&#xD;&#xA;       CreateFieldLookUp &quot;Compound&quot; &quot;Compound&quot; &quot;LookUp&quot; &quot;http://eccoe-sps2010:12345/sites/Azasite/TestSite&quot;  &quot;Team_TeamRoster&quot; &quot;Team_Compound&quot; &quot;Title&quot; &quot;false&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot;; &#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function CreateDropDownField([string] $fieldDisplayName,[string] $fieldInternalName,[string] $fieldDataType, [string] $DestinationSiteUrl,&#xD;&#xA;                     [string] $DestinationListName, [string] $ChoiceClmnDisplayType, [string] $ChoiceClmnItems, [string] $Compound)&#xD;&#xA;{&#xD;&#xA;    # Load Web and List &#xD;&#xA;                try{         &#xD;&#xA;                &#xD;&#xA;                #region Load List and Web&#xD;&#xA;                try{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$dstListWeb = Get-SPWeb -identity $DestinationSiteUrl;              &#xD;&#xA;                                $destinationListUrl = $dstListWeb.ServerRelativeUrl + &quot;/&quot; + $DestinationListName;&#xD;&#xA;                                $DestinationList = $dstListWeb.GetList($destinationListUrl);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;                }&#xD;&#xA;                catch{&#xD;&#xA;                                $dstListWeb = Get-SPWeb -identity $DestinationSiteUrl;              &#xD;&#xA;                                $destinationListUrl = $dstListWeb.ServerRelativeUrl + &quot;/lists/&quot; + $DestinationListName;&#xD;&#xA;                                $DestinationList = $dstListWeb.GetList($destinationListUrl);&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                #endregion&#xD;&#xA;                Write-Host &quot;DestinationList&quot; $DestinationList;&#xD;&#xA;                &#xD;&#xA;&#x9;            #region Create DropDown Choice Field&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;                        &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  $SourceField = $null;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$SourceField = $DestinationList.Fields.GetFieldByInternalName($Compound);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;[int]$hh = 0;&#xD;&#xA;&#x9;                        [int]$SourceFieldChoicesCount = $SourceField.Choices.Count;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if($SourceField -ne $null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try{&#xD;&#xA;&#xD;&#xA;&#x9;                            $ChoceFieldValues = $SourceField.Choices;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;                              for($hh -eq 0; $hh -lt $SourceFieldChoicesCount; $hh++)&#xD;&#xA;&#x9;                              {   &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;                                 $ChoiceClmnItems=$ChoiceClmnItems + $ChoceFieldValues[$hh]+&quot;;&quot;;&#xD;&#xA;&#x9;                              }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;#region function is for generating/appending Log File&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$Message = &quot;$FieldName_Meeting lookup field has been set to $LookupFieldName field&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Write-Host $Message;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$count=$count+1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;#endregion function is for generating/appending Log File&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;catch&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;#region function is for generating/appending Log File&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$Message = &quot;Error : While updating $ListFieldName field's property.&quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Write-Host $Message;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$count=$count+1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;#endregion function is for generating/appending Log File&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;                &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if($fieldDataType -eq &quot;Choice&quot;)&#xD;&#xA;&#x9;                {&#xD;&#xA;&#x9;                #region column of type 'Choice'&#xD;&#xA;&#x9;                &#xD;&#xA;&#x9;                #region Get Choice Items&#xD;&#xA;&#x9;                $ChoiceItems = $ChoiceClmnItems.split(&quot;;&quot;);&#xD;&#xA;&#x9;                $Choices = &quot;&lt;CHOICES&gt;&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;                for ($k=0; $k -le $ChoiceItems.length; $k++)&#xD;&#xA;&#x9;                                {&#xD;&#xA;&#x9;                                $Choices = $Choices + &quot;&lt;CHOICE&gt;&quot;;&#xD;&#xA;&#x9;                                $Choices = $Choices + $ChoiceItems[$k];&#xD;&#xA;&#x9;                                $Choices = $Choices + &quot;&lt;/CHOICE&gt;&quot;;&#xD;&#xA;&#x9;                                }&#xD;&#xA;&#x9;                $Choices = $Choices + &quot;&lt;/CHOICES&gt;&quot;;&#xD;&#xA;&#x9;                &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;                #endregion&#xD;&#xA;&#x9;                &#xD;&#xA;&#x9;                if($ChoiceClmnDisplayType -eq &quot;Dropdown&quot;)&#xD;&#xA;&#x9;                {&#xD;&#xA;&#x9;    &#x9;&#x9;&#x9;&#x9;$ColXml = &quot;&lt;Field Type='Choice' Format='Dropdown' FillInChoice='FALSE' DisplayName='&quot; + $fieldInternalName + &quot;' StaticName='&quot; + $fieldInternalName +&quot;' Name='&quot; + $fieldInternalName + &quot;' &gt;&quot; + $Choices + &quot;&lt;/Field&gt;&quot;;&#xD;&#xA;&#x9;    &#x9;&#x9;&#x9;}     &#xD;&#xA;&#x9;    &#xD;&#xA;&#x9;                $DestinationList.Fields.AddFieldAsXml($ColXml,$true, [Microsoft.SharePoint.SPAddFieldOptions]::AddFieldToDefaultView);&#xD;&#xA;&#x9;                $DestinationList.Update();&#xD;&#xA;&#x9;                #endregion&#xD;&#xA;&#x9;                }&#xD;&#xA;&#xD;&#xA;&#x9;                #endregion&#xD;&#xA;&#x9;                &#xD;&#xA;     &#xD;&#xA;                &#xD;&#xA;                #region function is for generating/appending Log File&#xD;&#xA;                $Message = &quot;Field &quot; + $fieldDisplayName + &quot;Created in destination list &quot; + $DestinationListName +&quot; type &quot;+$fieldDataType;&#xD;&#xA;                #Bellow function is for generating Log File                            &#xD;&#xA;                $count=$count+1;&#xD;&#xA;                Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;                #endregion function is for generating/appending Log File&#xD;&#xA;                &#xD;&#xA;    }&#xD;&#xA;                catch{&#xD;&#xA;                                                &#xD;&#xA;                        #region function is for generating/appending Log File&#xD;&#xA;                        $Message = &quot;Error : in Create DropDown  Field Function is $_ . List named $DestinationListName does not exist on $DestinationSiteUrl&quot;&#xD;&#xA;                        #Bellow function is for generating Log File                            &#xD;&#xA;                        $count=$count+1;&#xD;&#xA;                        Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;                        #endregion function is for generating/appending Log File&#xD;&#xA;                                        &#xD;&#xA;                        Write-Host -ForegroundColor red $Message;&#xD;&#xA;                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;#region CreateField Function&#xD;&#xA;function CreateFieldLookUp([string] $fieldDisplayName,[string] $fieldInternalName,[string] $fieldDataType, [string] $DestinationSiteUrl,&#xD;&#xA;                     [string] $DestinationListName, [string] $LookUpMasterListName, [string] $LookUpMasterListClmnName, [string] $LookUpAllowMultiple, [string] $MultiLineClmnTextType,&#xD;&#xA;                                                                                [string] $ChoiceClmnDisplayType, [string] $ChoiceClmnItems, [string] $CalculatedClmnFormula, [string] $CalculatedClmnDataType,&#xD;&#xA;                                                                                [string] $fieldListView, [string] $UserClmnType)&#xD;&#xA;{     &#xD;&#xA;                try&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{         &#xD;&#xA;                &#xD;&#xA;                #region Load List and Web&#xD;&#xA;                try{&#xD;&#xA;                                $dstListWeb = Get-SPWeb -identity $DestinationSiteUrl;              &#xD;&#xA;                                $destinationListUrl = $dstListWeb.ServerRelativeUrl + &quot;/&quot; + $DestinationListName;&#xD;&#xA;                                $DestinationList = $dstListWeb.GetList($destinationListUrl);&#xD;&#xA;                }&#xD;&#xA;                catch{&#xD;&#xA;                                $dstListWeb = Get-SPWeb -identity $DestinationSiteUrl;              &#xD;&#xA;                                $destinationListUrl = $dstListWeb.ServerRelativeUrl + &quot;/lists/&quot; + $DestinationListName;&#xD;&#xA;                                $DestinationList = $dstListWeb.GetList($destinationListUrl);&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                #endregion&#xD;&#xA;                Write-Host &quot;DestinationList&quot; $DestinationList;&#xD;&#xA;                &#xD;&#xA;    &#x9;&#x9;&#x9;#region Create Field&#xD;&#xA;                &#xD;&#xA; &#xD;&#xA;               if($fieldDataType -eq &quot;Lookup&quot;)&#xD;&#xA;                {&#xD;&#xA;                #region column of type 'Lookup'               &#xD;&#xA;                $lookupListUrl = $dstListWeb.ServerRelativeUrl + &quot;/Lists/&quot; + $LookUpMasterListName;&#xD;&#xA;                $LookupList = $dstListWeb.GetList($lookupListUrl);&#xD;&#xA;                $LookupListID = $LookupList.ID;&#xD;&#xA;                if($LookUpAllowMultiple -eq &quot;true&quot;)&#xD;&#xA;                {&#xD;&#xA;                $ColXml = &quot;&lt;Field Type='Lookup' AllowMultipleValues='true' RelationshipDeleteBehavior='None' DisplayName='&quot; + $fieldInternalName + &quot;' StaticName='&quot; + $fieldInternalName +&quot;' Name='&quot; + $fieldInternalName + &quot;' List='{&quot; + $LookupListID + &quot;}' ShowField='&quot; + $LookUpMasterListClmnName +&quot;' /&gt;&quot;;&#xD;&#xA;    }&#xD;&#xA;                elseif($LookUpAllowMultiple -eq &quot;false&quot;)&#xD;&#xA;                {&#xD;&#xA;                $ColXml = &quot;&lt;Field Type='Lookup' AllowMultipleValues='false' RelationshipDeleteBehavior='None' DisplayName='&quot; + $fieldInternalName + &quot;' StaticName='&quot; + $fieldInternalName +&quot;' Name='&quot; + $fieldInternalName + &quot;' List='{&quot; + $LookupListID + &quot;}' ShowField='&quot; + $LookUpMasterListClmnName +&quot;' /&gt;&quot;;&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                $DestinationList.Fields.AddFieldAsXml($ColXml,$true, [Microsoft.SharePoint.SPAddFieldOptions]::AddFieldToDefaultView);&#xD;&#xA;                $DestinationList.Update();&#xD;&#xA;                #endregion&#xD;&#xA;                }&#xD;&#xA;               &#xD;&#xA;             &#xD;&#xA;                #endregion&#xD;&#xA;                &#xD;&#xA;                               &#xD;&#xA;         &#xD;&#xA;                &#xD;&#xA;                #region function is for generating/appending Log File&#xD;&#xA;                $Message = &quot;Field &quot; + $fieldDisplayName + &quot;Created in destination list &quot; + $DestinationListName +&quot; type &quot;+$fieldDataType;&#xD;&#xA;                #Bellow function is for generating Log File                            &#xD;&#xA;                $count=$count+1;&#xD;&#xA;                Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;                #endregion function is for generating/appending Log File&#xD;&#xA;                &#xD;&#xA;    &#x9;&#x9;&#x9;}&#xD;&#xA;                catch&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                                                &#xD;&#xA;                        #region function is for generating/appending Log File&#xD;&#xA;                        $Message = &quot;Error : in Create Field Function is $_ . List named $DestinationListName does not exist on $DestinationSiteUrl&quot;&#xD;&#xA;                        #Bellow function is for generating Log File                            &#xD;&#xA;                        $count=$count+1;&#xD;&#xA;                        Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;                        #endregion function is for generating/appending Log File&#xD;&#xA;                                        &#xD;&#xA;                        Write-Host -ForegroundColor red $Message;&#xD;&#xA;                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;#region Change the Display Name&#xD;&#xA;                &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;try{&#xD;&#xA;&#x9;                $spField = $DestinationList.Fields.GetFieldByInternalName($fieldInternalName);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if($spField -eq $null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$spField = $DestinationList.Fields[$fieldInternalName];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if($spField -ne $null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;                $spField.Title = $fieldDisplayName;&#xD;&#xA;&#x9;&#x9;                $spField.Update();&#xD;&#xA;&#x9;                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; #region function is for generating/appending Log File&#xD;&#xA;&#x9;&#x9;                 $Message = &quot;Field $fieldDisplayName on $DestinationSiteUrl not found&quot;&#xD;&#xA;&#x9;&#x9;                 #Bellow function is for generating Log File                            &#xD;&#xA;&#x9;&#x9;                 $count=$count+1;&#xD;&#xA;&#x9;&#x9;                 Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;&#x9;&#x9;                 #endregion function is for generating/appending Log File&#xD;&#xA;&#x9;&#x9;                                &#xD;&#xA;&#x9;&#x9;                 Write-Host -ForegroundColor red $Message;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;catch&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;#region function is for generating/appending Log File&#xD;&#xA;&#x9;                $Message = &quot;Error : in Create Field Function while changing Display Name is $_ . Field name  $fieldDisplayName on $DestinationSiteUrl&quot;&#xD;&#xA;&#x9;                #Bellow function is for generating Log File                            &#xD;&#xA;&#x9;                $count=$count+1;&#xD;&#xA;&#x9;                Generate-LogFile $Message $count $LogFileDayF;&#xD;&#xA;&#x9;                #endregion function is for generating/appending Log File&#xD;&#xA;&#x9;                                &#xD;&#xA;&#x9;                Write-Host -ForegroundColor red $Message;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                #endregion&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#endregion CreateField Function&#xD;&#xA;Main-Function" />
</CodeSnippets>