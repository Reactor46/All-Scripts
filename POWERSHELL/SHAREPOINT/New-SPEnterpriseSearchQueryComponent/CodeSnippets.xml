<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="#####################################################################################################################################&#xD;&#xA;# Filename: New-SPEnterpriseSearchQueryComponent.ps1&#xD;&#xA;# Version : 1.0&#xD;&#xA;# Description : This script creates a new query processing component on another server in existing enteprise search topology. This &#xD;&#xA;#               script assumes that all running crawls have been stopped already, as precautionary step. &#xD;&#xA;# Written by  : Mohit Goyal&#xD;&#xA;#####################################################################################################################################&#xD;&#xA;&#xD;&#xA;#load SharePoint Snap-in&#xD;&#xA;Add-PSSnapin Microsoft.SharePoint.PowerShell&#xD;&#xA;&#xD;&#xA;#Mention server name on which you need to create an additional query processing component&#xD;&#xA;$Server = &quot;CON-SPWEBDEV-01&quot;&#xD;&#xA;&#xD;&#xA;Try{&#xD;&#xA;&#xD;&#xA;    #Gets the existing search service application&#xD;&#xA;    Write-Output &quot;Fetching search service application...&quot;&#xD;&#xA;    $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;    if(!$?)&#xD;&#xA;    {&#xD;&#xA;        throw &quot;Unable to fetch search service application. Pls make sure its up and running fine&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Gets the Search Service Instance on the specified Server&#xD;&#xA;    Write-Output &quot;Fetching search service instance on server $Server...&quot;&#xD;&#xA;    $Instance = Get-SPEnterpriseSearchServiceInstance -Identity $Server&#xD;&#xA;    if(!$?){&#xD;&#xA;        throw &quot;Unable to fetch search service instance on the server $Server&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Starts Search Service Instance on the specified server.&#xD;&#xA;    if($Instance.Status -ne &quot;Online&quot;){&#xD;&#xA;        Write-Output &quot;Starting service instance...&quot;   &#xD;&#xA;        Start-SPEnterpriseSearchServiceInstance $Instance&#xD;&#xA;        Write-Output &quot;Waiting for 60 seconds for instance to come online...&quot;&#xD;&#xA;        sleep 60&#xD;&#xA;        for ($Count=1;$Count -lt 5;$Count++){&#xD;&#xA;            $Instance = Get-SPEnterpriseSearchServiceInstance -Identity $Server&#xD;&#xA;            if($Instance.Status -ne &quot;Online&quot;){&#xD;&#xA;                Write-Output &quot;Waiting for another 60 seconds...&quot;&#xD;&#xA;                sleep 60&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                $Count = 6&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        if($Count -eq 5){&#xD;&#xA;            throw &quot;Failed to start search service instance on server. Pls start manually and run script again&quot;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Clone existing topology&#xD;&#xA;    Write-Output &quot;Fetching active topology and cloning it...&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    $ClonedTopology = New-SPEnterpriseSearchTopology -SearchApplication $SSA -Clone –SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;    #Add query processing component for another server and set topology as active&#xD;&#xA;    Write-Output &quot;Adding query processing component for specified server...&quot;&#xD;&#xA;    New-SPEnterpriseSearchQueryProcessingComponent -SearchTopology $ClonedTopology -SearchServiceInstance $Instance&#xD;&#xA;    Write-Output &quot;Setting new search topology as active...&quot;&#xD;&#xA;    Set-SPEnterpriseSearchTopology -Identity $ClonedTopology&#xD;&#xA;&#xD;&#xA;    #Displays Current topology components to user&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Here are the current search components:&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    Get-SPEnterpriseSearchComponent -SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Catch{&#xD;&#xA;    Write-Error &quot;Exception Type: $($_.Exception.GetType().FullName)&quot;&#xD;&#xA;    Write-Error &quot;Exception Message: $($_.Exception.Message)&quot;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#########################################################################################################################################&#xD;&#xA;## End of Script&#xD;&#xA;#########################################################################################################################################" />
  <Code Content="#####################################################################################################################################&#xD;&#xA;# Filename: New-SPEnterpriseSearchQueryComponent.ps1&#xD;&#xA;# Version : 1.0&#xD;&#xA;# Description : This script creates a new query processing component on another server in existing enteprise search topology. This &#xD;&#xA;#               script assumes that all running crawls have been stopped already, as precautionary step. &#xD;&#xA;# Written by  : Mohit Goyal&#xD;&#xA;#####################################################################################################################################&#xD;&#xA;&#xD;&#xA;#load SharePoint Snap-in&#xD;&#xA;Add-PSSnapin Microsoft.SharePoint.PowerShell&#xD;&#xA;&#xD;&#xA;#Mention server name on which you need to create an additional query processing component&#xD;&#xA;$Server = &quot;CON-SPWEBDEV-01&quot;&#xD;&#xA;&#xD;&#xA;Try{&#xD;&#xA;&#xD;&#xA;    #Gets the existing search service application&#xD;&#xA;    Write-Output &quot;Fetching search service application...&quot;&#xD;&#xA;    $SSA = Get-SPEnterpriseSearchServiceApplication&#xD;&#xA;    if(!$?)&#xD;&#xA;    {&#xD;&#xA;        throw &quot;Unable to fetch search service application. Pls make sure its up and running fine&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Gets the Search Service Instance on the specified Server&#xD;&#xA;    Write-Output &quot;Fetching search service instance on server $Server...&quot;&#xD;&#xA;    $Instance = Get-SPEnterpriseSearchServiceInstance -Identity $Server&#xD;&#xA;    if(!$?){&#xD;&#xA;        throw &quot;Unable to fetch search service instance on the server $Server&quot;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Starts Search Service Instance on the specified server.&#xD;&#xA;    if($Instance.Status -ne &quot;Online&quot;){&#xD;&#xA;        Write-Output &quot;Starting service instance...&quot;   &#xD;&#xA;        Start-SPEnterpriseSearchServiceInstance $Instance&#xD;&#xA;        Write-Output &quot;Waiting for 60 seconds for instance to come online...&quot;&#xD;&#xA;        sleep 60&#xD;&#xA;        for ($Count=1;$Count -lt 5;$Count++){&#xD;&#xA;            $Instance = Get-SPEnterpriseSearchServiceInstance -Identity $Server&#xD;&#xA;            if($Instance.Status -ne &quot;Online&quot;){&#xD;&#xA;                Write-Output &quot;Waiting for another 60 seconds...&quot;&#xD;&#xA;                sleep 60&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                $Count = 6&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        if($Count -eq 5){&#xD;&#xA;            throw &quot;Failed to start search service instance on server. Pls start manually and run script again&quot;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    #Clone existing topology&#xD;&#xA;    Write-Output &quot;Fetching active topology and cloning it...&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    $ClonedTopology = New-SPEnterpriseSearchTopology -SearchApplication $SSA -Clone –SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;    #Add query processing component for another server and set topology as active&#xD;&#xA;    Write-Output &quot;Adding query processing component for specified server...&quot;&#xD;&#xA;    New-SPEnterpriseSearchQueryProcessingComponent -SearchTopology $ClonedTopology -SearchServiceInstance $Instance&#xD;&#xA;    Write-Output &quot;Setting new search topology as active...&quot;&#xD;&#xA;    Set-SPEnterpriseSearchTopology -Identity $ClonedTopology&#xD;&#xA;&#xD;&#xA;    #Displays Current topology components to user&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Here are the current search components:&quot;&#xD;&#xA;    $ActiveToplogy = Get-SPEnterpriseSearchTopology -Active -SearchApplication $SSA&#xD;&#xA;    Get-SPEnterpriseSearchComponent -SearchTopology $ActiveToplogy&#xD;&#xA;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Catch{&#xD;&#xA;    Write-Error &quot;Exception Type: $($_.Exception.GetType().FullName)&quot;&#xD;&#xA;    Write-Error &quot;Exception Message: $($_.Exception.Message)&quot;&#xD;&#xA;    Write-Output &quot;&quot;&#xD;&#xA;    Write-Output &quot;Script Execution finished&quot;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#########################################################################################################################################&#xD;&#xA;## End of Script&#xD;&#xA;#########################################################################################################################################" />
</CodeSnippets>