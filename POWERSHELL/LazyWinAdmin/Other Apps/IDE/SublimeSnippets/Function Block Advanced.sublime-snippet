<!-- See http://www.sublimetext.com/docs/snippets for more information -->
<snippet>
    <content><![CDATA[
function Verb-Noun {

    [CmdletBinding(
        DefaultParameterSetName='Parameter Set 1', 
        PositionalBinding=\$true,
        ConfirmImpact='Medium'
    )]
    [Alias('vn','verbn','vnoun')]

    <#
    All PS 5.1 Parameter Arguments and Attributes are as follows:
    (See: https://msdn.microsoft.com/en-us/powershell/reference/5.1/microsoft.powershell.core/about/about_functions_advanced_parameters)
    
    	Arguments:
    	Syntax is, for example -
    	[parameter(Mandatory=\$true,Position=1)])

    	Mandatory, Position, ParameterSetName, ValueFromPipeline, ValueFromPipelineByPropertyName,
    	ValueFromRemainingArguments, HelpMessage
    	
    	Attributes:
    	Syntax is somewhere immediately before the parameter name, for example -
    	[Alias("CN","MachineName")]
		\$ComputerName

		Alias, AllowNull, AllowEmptyString, AllowEmptyCollection, ValidateCount, ValidateLength,
		ValidatePattern, ValidateRange, ValidateScript, ValidateSet, ValidateNotNull,
		ValidateNotNullOrEmpty
    #>

    Param(
        [Parameter(
            Mandatory=\$False,
            ParameterSetName='Parameter Set 1'
        )]
        [Alias("helperdir")]
        [string]\$HelperFunctionSourceDirectory = \$(Read-Host -Prompt "Please enter the full path to the directory that contains the [HELPER] script(s)/function(s)"),

        [Parameter(
            Mandatory=\$False,
            ParameterSetName='Parameter Set 1'
        )]
        [Alias("outdir")]
        [string]\$OutputDirectory = \$(Read-Host -Prompt "Please enter the full path to the directory where all output files will be written")
     )
    
    # Adding the Dynamic Parameter "dp1" that is revealed via tab completion if \$OutputDirectory matches "C:\\\\boop"
    DynamicParam {
        if (\$OutputDirectory -match "C:\\\\boop") {
            \$attributes = New-Object System.Management.Automation.ParameterAttribute
            \$attributes.ParameterSetName = "__AllParameterSets"
            \$attributes.Mandatory = \$false

            \$attributeCollection = New-Object -Type System.Collections.ObjectModel.Collection
            [System.Attribute]\$attributeCollection.Add(\$attributes)

            \$dynParam1 = New-Object -Type System.Management.Automation.RuntimeDefinedParameter("dp1", [Int32], \$attributeCollection)

            \$paramDictionary = New-Object -Type System.Management.Automation.RuntimeDefinedParameterDictionary
            \$paramDictionary.Add("dp1", \$dynParam1)
            return \$paramDictionary
        }
    }

    ##### REGION Helper Functions and Libraries #####

    ## BEGIN Sourced Helper Functions ##

    ## END Sourced Helper Functions ##

    ## BEGIN Native Helper Functions ##

    ## END Native Helper Functions ##

    ##### REGION END Helper Functions and Libraries #####


    ##### BEGIN Variable/Parameter Transforms and PreRun Prep #####

    ##### END Variable/Parameter Transforms and PreRun Prep #####


    ##### BEGIN Parameter Validation #####

    ##### END Parameter Validation #####


    ##### BEGIN Main Body #####

    ##### END Main Body #####

}

$0]]></content>
    <!-- Optional: Tab trigger to activate the snippet -->
    <tabTrigger>funadv</tabTrigger>
    <!-- Optional: Scope the tab trigger will be active in -->
    <scope>source.powershell</scope>
</snippet>
